{
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar bodyParser = require('body-parser');\n\nvar router = require('./routes/index');\n\nvar app = express();\nvar port = process.env.PORT || 5000;\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use('/', router);\napp.use('/status', router);\napp.use('/stats', router);\napp.use('/users', router);\napp.use('/connect', router);\napp.use('/disconnect', router);\napp.use('/files', router);\napp.listen(port);\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImJvZHlQYXJzZXIiLCJyb3V0ZXIiLCJhcHAiLCJwb3J0IiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwibGlzdGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1DLFVBQVUsR0FBR0QsT0FBTyxDQUFDLGFBQUQsQ0FBMUI7O0FBQ0EsSUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBdEI7O0FBRUEsSUFBTUcsR0FBRyxHQUFHSixPQUFPLEVBQW5CO0FBQ0EsSUFBTUssSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFqQztBQUVBSixHQUFHLENBQUNLLEdBQUosQ0FBUVAsVUFBVSxDQUFDUSxVQUFYLENBQXNCO0FBQUVDLEVBQUFBLFFBQVEsRUFBRTtBQUFaLENBQXRCLENBQVI7QUFDQVAsR0FBRyxDQUFDSyxHQUFKLENBQVFQLFVBQVUsQ0FBQ1UsSUFBWCxFQUFSO0FBRUFSLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLEdBQVIsRUFBYU4sTUFBYjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxTQUFSLEVBQW1CTixNQUFuQjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxRQUFSLEVBQWtCTixNQUFsQjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxRQUFSLEVBQWtCTixNQUFsQjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxVQUFSLEVBQW9CTixNQUFwQjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxhQUFSLEVBQXVCTixNQUF2QjtBQUNBQyxHQUFHLENBQUNLLEdBQUosQ0FBUSxRQUFSLEVBQWtCTixNQUFsQjtBQUVBQyxHQUFHLENBQUNTLE1BQUosQ0FBV1IsSUFBWDtBQUVBUyxNQUFNLENBQUNDLE9BQVAsR0FBaUJYLEdBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3ZhZ3JhbnQvaG9sYmVydG9uc2Nob29sLWZpbGVzX21hbmFnZXIvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgPSByZXF1aXJlKCdib2R5LXBhcnNlcicpO1xuY29uc3Qgcm91dGVyID0gcmVxdWlyZSgnLi9yb3V0ZXMvaW5kZXgnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgcG9ydCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgNTAwMDtcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBleHRlbmRlZDogdHJ1ZSB9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuYXBwLnVzZSgnLycsIHJvdXRlcik7XG5hcHAudXNlKCcvc3RhdHVzJywgcm91dGVyKTtcbmFwcC51c2UoJy9zdGF0cycsIHJvdXRlcik7XG5hcHAudXNlKCcvdXNlcnMnLCByb3V0ZXIpO1xuYXBwLnVzZSgnL2Nvbm5lY3QnLCByb3V0ZXIpO1xuYXBwLnVzZSgnL2Rpc2Nvbm5lY3QnLCByb3V0ZXIpO1xuYXBwLnVzZSgnL2ZpbGVzJywgcm91dGVyKTtcblxuYXBwLmxpc3Rlbihwb3J0KTtcblxubW9kdWxlLmV4cG9ydHMgPSBhcHA7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "bodyParser",
        "router",
        "app",
        "port",
        "process",
        "env",
        "PORT",
        "use",
        "urlencoded",
        "extended",
        "json",
        "listen",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;AACA,IAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQP,UAAU,CAACQ,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQP,UAAU,CAACU,IAAX,EAAR;AAEAR,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaN,MAAb;AACAC,GAAG,CAACK,GAAJ,CAAQ,SAAR,EAAmBN,MAAnB;AACAC,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBN,MAAlB;AACAC,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBN,MAAlB;AACAC,GAAG,CAACK,GAAJ,CAAQ,UAAR,EAAoBN,MAApB;AACAC,GAAG,CAACK,GAAJ,CAAQ,aAAR,EAAuBN,MAAvB;AACAC,GAAG,CAACK,GAAJ,CAAQ,QAAR,EAAkBN,MAAlB;AAEAC,GAAG,CAACS,MAAJ,CAAWR,IAAX;AAEAS,MAAM,CAACC,OAAP,GAAiBX,GAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/",
      "sourcesContent": [
        "const express = require('express');\nconst bodyParser = require('body-parser');\nconst router = require('./routes/index');\n\nconst app = express();\nconst port = process.env.PORT || 5000;\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\n\napp.use('/', router);\napp.use('/status', router);\napp.use('/stats', router);\napp.use('/users', router);\napp.use('/connect', router);\napp.use('/disconnect', router);\napp.use('/files', router);\n\napp.listen(port);\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611976050323
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/routes/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/routes/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/routes/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/routes/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/routes/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/routes/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/routes/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar express = require('express');\n\nvar _require = require('../controllers/AppController'),\n    getStatus = _require.getStatus,\n    getStats = _require.getStats;\n\nvar _require2 = require('../controllers/UsersController'),\n    postNew = _require2.postNew,\n    getMe = _require2.getMe;\n\nvar _require3 = require('../controllers/AuthController'),\n    getConnect = _require3.getConnect,\n    getDisconnect = _require3.getDisconnect;\n\nvar _require4 = require('../controllers/FilesController'),\n    postUpload = _require4.postUpload,\n    getShow = _require4.getShow,\n    getIndex = _require4.getIndex,\n    putPublish = _require4.putPublish,\n    putUnpublish = _require4.putUnpublish,\n    getFile = _require4.getFile;\n\nvar router = express.Router();\nrouter.get('/', function (req, res) {\n  return res.send('Hi, this is a file manager.');\n});\nrouter.get('/status', function (req, res) {\n  return getStatus(req, res);\n});\nrouter.get('/stats', function (req, res) {\n  return getStats(req, res);\n});\nrouter.post('/users', function (req, res) {\n  return postNew(req, res);\n});\nrouter.get('/users/me', function (req, res) {\n  return getMe(req, res);\n});\nrouter.get('/connect', function (req, res) {\n  return getConnect(req, res);\n});\nrouter.get('/disconnect', function (req, res) {\n  return getDisconnect(req, res);\n});\nrouter.post('/files', function (req, res) {\n  return postUpload(req, res);\n});\nrouter.get('/files/:id', function (req, res) {\n  return getShow(req, res);\n});\nrouter.get('/files', function (req, res) {\n  return getIndex(req, res);\n});\nrouter.put('/files/:id/publish', function (req, res) {\n  return putPublish(req, res);\n});\nrouter.put('/files/:id/unpublish', function (req, res) {\n  return putUnpublish(req, res);\n});\nrouter.get('/files/:id/data', function (req, res) {\n  return getFile(req, res);\n});\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiZ2V0U3RhdHVzIiwiZ2V0U3RhdHMiLCJwb3N0TmV3IiwiZ2V0TWUiLCJnZXRDb25uZWN0IiwiZ2V0RGlzY29ubmVjdCIsInBvc3RVcGxvYWQiLCJnZXRTaG93IiwiZ2V0SW5kZXgiLCJwdXRQdWJsaXNoIiwicHV0VW5wdWJsaXNoIiwiZ2V0RmlsZSIsInJvdXRlciIsIlJvdXRlciIsImdldCIsInJlcSIsInJlcyIsInNlbmQiLCJwb3N0IiwicHV0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxPQUFPLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXZCOztlQUNnQ0EsT0FBTyxDQUFDLDhCQUFELEM7SUFBL0JDLFMsWUFBQUEsUztJQUFXQyxRLFlBQUFBLFE7O2dCQUNRRixPQUFPLENBQUMsZ0NBQUQsQztJQUExQkcsTyxhQUFBQSxPO0lBQVNDLEssYUFBQUEsSzs7Z0JBQ3FCSixPQUFPLENBQUMsK0JBQUQsQztJQUFyQ0ssVSxhQUFBQSxVO0lBQVlDLGEsYUFBQUEsYTs7Z0JBR2hCTixPQUFPLENBQUMsZ0NBQUQsQztJQURUTyxVLGFBQUFBLFU7SUFBWUMsTyxhQUFBQSxPO0lBQVNDLFEsYUFBQUEsUTtJQUFVQyxVLGFBQUFBLFU7SUFBWUMsWSxhQUFBQSxZO0lBQWNDLE8sYUFBQUEsTzs7QUFHM0QsSUFBTUMsTUFBTSxHQUFHZCxPQUFPLENBQUNlLE1BQVIsRUFBZjtBQUVBRCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxHQUFYLEVBQWdCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTLDZCQUFULENBQWQ7QUFBQSxDQUFoQjtBQUNBTCxNQUFNLENBQUNFLEdBQVAsQ0FBVyxTQUFYLEVBQXNCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNoQixTQUFTLENBQUNlLEdBQUQsRUFBTUMsR0FBTixDQUF2QjtBQUFBLENBQXRCO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFFBQVgsRUFBcUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY2YsUUFBUSxDQUFDYyxHQUFELEVBQU1DLEdBQU4sQ0FBdEI7QUFBQSxDQUFyQjtBQUVBSixNQUFNLENBQUNNLElBQVAsQ0FBWSxRQUFaLEVBQXNCLFVBQUNILEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNkLE9BQU8sQ0FBQ2EsR0FBRCxFQUFNQyxHQUFOLENBQXJCO0FBQUEsQ0FBdEI7QUFDQUosTUFBTSxDQUFDRSxHQUFQLENBQVcsV0FBWCxFQUF3QixVQUFDQyxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjYixLQUFLLENBQUNZLEdBQUQsRUFBTUMsR0FBTixDQUFuQjtBQUFBLENBQXhCO0FBRUFKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFVBQVgsRUFBdUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY1osVUFBVSxDQUFDVyxHQUFELEVBQU1DLEdBQU4sQ0FBeEI7QUFBQSxDQUF2QjtBQUNBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxhQUFYLEVBQTBCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNYLGFBQWEsQ0FBQ1UsR0FBRCxFQUFNQyxHQUFOLENBQTNCO0FBQUEsQ0FBMUI7QUFFQUosTUFBTSxDQUFDTSxJQUFQLENBQVksUUFBWixFQUFzQixVQUFDSCxHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjVixVQUFVLENBQUNTLEdBQUQsRUFBTUMsR0FBTixDQUF4QjtBQUFBLENBQXRCO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLFlBQVgsRUFBeUIsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY1QsT0FBTyxDQUFDUSxHQUFELEVBQU1DLEdBQU4sQ0FBckI7QUFBQSxDQUF6QjtBQUNBSixNQUFNLENBQUNFLEdBQVAsQ0FBVyxRQUFYLEVBQXFCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNSLFFBQVEsQ0FBQ08sR0FBRCxFQUFNQyxHQUFOLENBQXRCO0FBQUEsQ0FBckI7QUFDQUosTUFBTSxDQUFDTyxHQUFQLENBQVcsb0JBQVgsRUFBaUMsVUFBQ0osR0FBRCxFQUFNQyxHQUFOO0FBQUEsU0FBY1AsVUFBVSxDQUFDTSxHQUFELEVBQU1DLEdBQU4sQ0FBeEI7QUFBQSxDQUFqQztBQUNBSixNQUFNLENBQUNPLEdBQVAsQ0FBVyxzQkFBWCxFQUFtQyxVQUFDSixHQUFELEVBQU1DLEdBQU47QUFBQSxTQUFjTixZQUFZLENBQUNLLEdBQUQsRUFBTUMsR0FBTixDQUExQjtBQUFBLENBQW5DO0FBQ0FKLE1BQU0sQ0FBQ0UsR0FBUCxDQUFXLGlCQUFYLEVBQThCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTjtBQUFBLFNBQWNMLE9BQU8sQ0FBQ0ksR0FBRCxFQUFNQyxHQUFOLENBQXJCO0FBQUEsQ0FBOUI7QUFFQUksTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92YWdyYW50L2hvbGJlcnRvbnNjaG9vbC1maWxlc19tYW5hZ2VyL3JvdXRlcy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpO1xuY29uc3QgeyBnZXRTdGF0dXMsIGdldFN0YXRzIH0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9BcHBDb250cm9sbGVyJyk7XG5jb25zdCB7IHBvc3ROZXcsIGdldE1lIH0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9Vc2Vyc0NvbnRyb2xsZXInKTtcbmNvbnN0IHsgZ2V0Q29ubmVjdCwgZ2V0RGlzY29ubmVjdCB9ID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvQXV0aENvbnRyb2xsZXInKTtcbmNvbnN0IHtcbiAgcG9zdFVwbG9hZCwgZ2V0U2hvdywgZ2V0SW5kZXgsIHB1dFB1Ymxpc2gsIHB1dFVucHVibGlzaCwgZ2V0RmlsZSxcbn0gPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9GaWxlc0NvbnRyb2xsZXInKTtcblxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcblxucm91dGVyLmdldCgnLycsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoJ0hpLCB0aGlzIGlzIGEgZmlsZSBtYW5hZ2VyLicpKTtcbnJvdXRlci5nZXQoJy9zdGF0dXMnLCAocmVxLCByZXMpID0+IGdldFN0YXR1cyhyZXEsIHJlcykpO1xucm91dGVyLmdldCgnL3N0YXRzJywgKHJlcSwgcmVzKSA9PiBnZXRTdGF0cyhyZXEsIHJlcykpO1xuXG5yb3V0ZXIucG9zdCgnL3VzZXJzJywgKHJlcSwgcmVzKSA9PiBwb3N0TmV3KHJlcSwgcmVzKSk7XG5yb3V0ZXIuZ2V0KCcvdXNlcnMvbWUnLCAocmVxLCByZXMpID0+IGdldE1lKHJlcSwgcmVzKSk7XG5cbnJvdXRlci5nZXQoJy9jb25uZWN0JywgKHJlcSwgcmVzKSA9PiBnZXRDb25uZWN0KHJlcSwgcmVzKSk7XG5yb3V0ZXIuZ2V0KCcvZGlzY29ubmVjdCcsIChyZXEsIHJlcykgPT4gZ2V0RGlzY29ubmVjdChyZXEsIHJlcykpO1xuXG5yb3V0ZXIucG9zdCgnL2ZpbGVzJywgKHJlcSwgcmVzKSA9PiBwb3N0VXBsb2FkKHJlcSwgcmVzKSk7XG5yb3V0ZXIuZ2V0KCcvZmlsZXMvOmlkJywgKHJlcSwgcmVzKSA9PiBnZXRTaG93KHJlcSwgcmVzKSk7XG5yb3V0ZXIuZ2V0KCcvZmlsZXMnLCAocmVxLCByZXMpID0+IGdldEluZGV4KHJlcSwgcmVzKSk7XG5yb3V0ZXIucHV0KCcvZmlsZXMvOmlkL3B1Ymxpc2gnLCAocmVxLCByZXMpID0+IHB1dFB1Ymxpc2gocmVxLCByZXMpKTtcbnJvdXRlci5wdXQoJy9maWxlcy86aWQvdW5wdWJsaXNoJywgKHJlcSwgcmVzKSA9PiBwdXRVbnB1Ymxpc2gocmVxLCByZXMpKTtcbnJvdXRlci5nZXQoJy9maWxlcy86aWQvZGF0YScsIChyZXEsIHJlcykgPT4gZ2V0RmlsZShyZXEsIHJlcykpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHJvdXRlcjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "getStatus",
        "getStats",
        "postNew",
        "getMe",
        "getConnect",
        "getDisconnect",
        "postUpload",
        "getShow",
        "getIndex",
        "putPublish",
        "putUnpublish",
        "getFile",
        "router",
        "Router",
        "get",
        "req",
        "res",
        "send",
        "post",
        "put",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACgCA,OAAO,CAAC,8BAAD,C;IAA/BC,S,YAAAA,S;IAAWC,Q,YAAAA,Q;;gBACQF,OAAO,CAAC,gCAAD,C;IAA1BG,O,aAAAA,O;IAASC,K,aAAAA,K;;gBACqBJ,OAAO,CAAC,+BAAD,C;IAArCK,U,aAAAA,U;IAAYC,a,aAAAA,a;;gBAGhBN,OAAO,CAAC,gCAAD,C;IADTO,U,aAAAA,U;IAAYC,O,aAAAA,O;IAASC,Q,aAAAA,Q;IAAUC,U,aAAAA,U;IAAYC,Y,aAAAA,Y;IAAcC,O,aAAAA,O;;AAG3D,IAAMC,MAAM,GAAGd,OAAO,CAACe,MAAR,EAAf;AAEAD,MAAM,CAACE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS,6BAAT,CAAd;AAAA,CAAhB;AACAL,MAAM,CAACE,GAAP,CAAW,SAAX,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAchB,SAAS,CAACe,GAAD,EAAMC,GAAN,CAAvB;AAAA,CAAtB;AACAJ,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcf,QAAQ,CAACc,GAAD,EAAMC,GAAN,CAAtB;AAAA,CAArB;AAEAJ,MAAM,CAACM,IAAP,CAAY,QAAZ,EAAsB,UAACH,GAAD,EAAMC,GAAN;AAAA,SAAcd,OAAO,CAACa,GAAD,EAAMC,GAAN,CAArB;AAAA,CAAtB;AACAJ,MAAM,CAACE,GAAP,CAAW,WAAX,EAAwB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcb,KAAK,CAACY,GAAD,EAAMC,GAAN,CAAnB;AAAA,CAAxB;AAEAJ,MAAM,CAACE,GAAP,CAAW,UAAX,EAAuB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcZ,UAAU,CAACW,GAAD,EAAMC,GAAN,CAAxB;AAAA,CAAvB;AACAJ,MAAM,CAACE,GAAP,CAAW,aAAX,EAA0B,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcX,aAAa,CAACU,GAAD,EAAMC,GAAN,CAA3B;AAAA,CAA1B;AAEAJ,MAAM,CAACM,IAAP,CAAY,QAAZ,EAAsB,UAACH,GAAD,EAAMC,GAAN;AAAA,SAAcV,UAAU,CAACS,GAAD,EAAMC,GAAN,CAAxB;AAAA,CAAtB;AACAJ,MAAM,CAACE,GAAP,CAAW,YAAX,EAAyB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcT,OAAO,CAACQ,GAAD,EAAMC,GAAN,CAArB;AAAA,CAAzB;AACAJ,MAAM,CAACE,GAAP,CAAW,QAAX,EAAqB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcR,QAAQ,CAACO,GAAD,EAAMC,GAAN,CAAtB;AAAA,CAArB;AACAJ,MAAM,CAACO,GAAP,CAAW,oBAAX,EAAiC,UAACJ,GAAD,EAAMC,GAAN;AAAA,SAAcP,UAAU,CAACM,GAAD,EAAMC,GAAN,CAAxB;AAAA,CAAjC;AACAJ,MAAM,CAACO,GAAP,CAAW,sBAAX,EAAmC,UAACJ,GAAD,EAAMC,GAAN;AAAA,SAAcN,YAAY,CAACK,GAAD,EAAMC,GAAN,CAA1B;AAAA,CAAnC;AACAJ,MAAM,CAACE,GAAP,CAAW,iBAAX,EAA8B,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcL,OAAO,CAACI,GAAD,EAAMC,GAAN,CAArB;AAAA,CAA9B;AAEAI,MAAM,CAACC,OAAP,GAAiBT,MAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/routes/",
      "sourcesContent": [
        "const express = require('express');\nconst { getStatus, getStats } = require('../controllers/AppController');\nconst { postNew, getMe } = require('../controllers/UsersController');\nconst { getConnect, getDisconnect } = require('../controllers/AuthController');\nconst {\n  postUpload, getShow, getIndex, putPublish, putUnpublish, getFile,\n} = require('../controllers/FilesController');\n\nconst router = express.Router();\n\nrouter.get('/', (req, res) => res.send('Hi, this is a file manager.'));\nrouter.get('/status', (req, res) => getStatus(req, res));\nrouter.get('/stats', (req, res) => getStats(req, res));\n\nrouter.post('/users', (req, res) => postNew(req, res));\nrouter.get('/users/me', (req, res) => getMe(req, res));\n\nrouter.get('/connect', (req, res) => getConnect(req, res));\nrouter.get('/disconnect', (req, res) => getDisconnect(req, res));\n\nrouter.post('/files', (req, res) => postUpload(req, res));\nrouter.get('/files/:id', (req, res) => getShow(req, res));\nrouter.get('/files', (req, res) => getIndex(req, res));\nrouter.put('/files/:id/publish', (req, res) => putPublish(req, res));\nrouter.put('/files/:id/unpublish', (req, res) => putUnpublish(req, res));\nrouter.get('/files/:id/data', (req, res) => getFile(req, res));\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611976746855
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/controllers/AppController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/controllers/AppController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/controllers/AppController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/controllers/AppController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
        "sourceFileName": "AppController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar redisClient = require('../utils/redis');\n\nvar dbClient = require('../utils/db');\n\nfunction getStatus(req, res) {\n  if (redisClient.isAlive() && dbClient.isAlive()) {\n    res.status(200).json({\n      redis: true,\n      db: true\n    });\n  }\n}\n\nfunction getStats(_x, _x2) {\n  return _getStats.apply(this, arguments);\n}\n\nfunction _getStats() {\n  _getStats = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var userNum, fileNum;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return dbClient.nbUsers();\n\n          case 2:\n            userNum = _context.sent;\n            _context.next = 5;\n            return dbClient.nbFiles();\n\n          case 5:\n            fileNum = _context.sent;\n            res.status(200).json({\n              users: userNum,\n              files: fileNum\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStats.apply(this, arguments);\n}\n\nmodule.exports = {\n  getStats: getStats,\n  getStatus: getStatus\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFwcENvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsicmVkaXNDbGllbnQiLCJyZXF1aXJlIiwiZGJDbGllbnQiLCJnZXRTdGF0dXMiLCJyZXEiLCJyZXMiLCJpc0FsaXZlIiwic3RhdHVzIiwianNvbiIsInJlZGlzIiwiZGIiLCJnZXRTdGF0cyIsIm5iVXNlcnMiLCJ1c2VyTnVtIiwibmJGaWxlcyIsImZpbGVOdW0iLCJ1c2VycyIsImZpbGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsV0FBVyxHQUFHQyxPQUFPLENBQUMsZ0JBQUQsQ0FBM0I7O0FBQ0EsSUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF4Qjs7QUFFQSxTQUFTRSxTQUFULENBQW1CQyxHQUFuQixFQUF3QkMsR0FBeEIsRUFBNkI7QUFDM0IsTUFBSUwsV0FBVyxDQUFDTSxPQUFaLE1BQXlCSixRQUFRLENBQUNJLE9BQVQsRUFBN0IsRUFBaUQ7QUFDL0NELElBQUFBLEdBQUcsQ0FBQ0UsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLE1BQUFBLEtBQUssRUFBRSxJQUFUO0FBQWVDLE1BQUFBLEVBQUUsRUFBRTtBQUFuQixLQUFyQjtBQUNEO0FBQ0Y7O1NBRWNDLFE7Ozs7O3NFQUFmLGlCQUF3QlAsR0FBeEIsRUFBNkJDLEdBQTdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsbUJBQ3dCSCxRQUFRLENBQUNVLE9BQVQsRUFEeEI7O0FBQUE7QUFDUUMsWUFBQUEsT0FEUjtBQUFBO0FBQUEsbUJBRXdCWCxRQUFRLENBQUNZLE9BQVQsRUFGeEI7O0FBQUE7QUFFUUMsWUFBQUEsT0FGUjtBQUdFVixZQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQjtBQUFFUSxjQUFBQSxLQUFLLEVBQUVILE9BQVQ7QUFBa0JJLGNBQUFBLEtBQUssRUFBRUY7QUFBekIsYUFBckI7O0FBSEY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQU1BRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRVIsRUFBQUEsUUFBUSxFQUFSQSxRQUFGO0FBQVlSLEVBQUFBLFNBQVMsRUFBVEE7QUFBWixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92YWdyYW50L2hvbGJlcnRvbnNjaG9vbC1maWxlc19tYW5hZ2VyL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlZGlzQ2xpZW50ID0gcmVxdWlyZSgnLi4vdXRpbHMvcmVkaXMnKTtcbmNvbnN0IGRiQ2xpZW50ID0gcmVxdWlyZSgnLi4vdXRpbHMvZGInKTtcblxuZnVuY3Rpb24gZ2V0U3RhdHVzKHJlcSwgcmVzKSB7XG4gIGlmIChyZWRpc0NsaWVudC5pc0FsaXZlKCkgJiYgZGJDbGllbnQuaXNBbGl2ZSgpKSB7XG4gICAgcmVzLnN0YXR1cygyMDApLmpzb24oeyByZWRpczogdHJ1ZSwgZGI6IHRydWUgfSk7XG4gIH1cbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdHMocmVxLCByZXMpIHtcbiAgY29uc3QgdXNlck51bSA9IGF3YWl0IGRiQ2xpZW50Lm5iVXNlcnMoKTtcbiAgY29uc3QgZmlsZU51bSA9IGF3YWl0IGRiQ2xpZW50Lm5iRmlsZXMoKTtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24oeyB1c2VyczogdXNlck51bSwgZmlsZXM6IGZpbGVOdW0gfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBnZXRTdGF0cywgZ2V0U3RhdHVzIH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "AppController.js"
      ],
      "names": [
        "redisClient",
        "require",
        "dbClient",
        "getStatus",
        "req",
        "res",
        "isAlive",
        "status",
        "json",
        "redis",
        "db",
        "getStats",
        "nbUsers",
        "userNum",
        "nbFiles",
        "fileNum",
        "users",
        "files",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAA3B;;AACA,IAAMC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAxB;;AAEA,SAASE,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6B;AAC3B,MAAIL,WAAW,CAACM,OAAZ,MAAyBJ,QAAQ,CAACI,OAAT,EAA7B,EAAiD;AAC/CD,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,EAAE,EAAE;AAAnB,KAArB;AACD;AACF;;SAEcC,Q;;;;;sEAAf,iBAAwBP,GAAxB,EAA6BC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACwBH,QAAQ,CAACU,OAAT,EADxB;;AAAA;AACQC,YAAAA,OADR;AAAA;AAAA,mBAEwBX,QAAQ,CAACY,OAAT,EAFxB;;AAAA;AAEQC,YAAAA,OAFR;AAGEV,YAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEQ,cAAAA,KAAK,EAAEH,OAAT;AAAkBI,cAAAA,KAAK,EAAEF;AAAzB,aAArB;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAMAG,MAAM,CAACC,OAAP,GAAiB;AAAER,EAAAA,QAAQ,EAARA,QAAF;AAAYR,EAAAA,SAAS,EAATA;AAAZ,CAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "sourcesContent": [
        "const redisClient = require('../utils/redis');\nconst dbClient = require('../utils/db');\n\nfunction getStatus(req, res) {\n  if (redisClient.isAlive() && dbClient.isAlive()) {\n    res.status(200).json({ redis: true, db: true });\n  }\n}\n\nasync function getStats(req, res) {\n  const userNum = await dbClient.nbUsers();\n  const fileNum = await dbClient.nbFiles();\n  res.status(200).json({ users: userNum, files: fileNum });\n}\n\nmodule.exports = { getStats, getStatus };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611977132487
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/utils/redis.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/utils/redis.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/utils/redis.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/utils/redis.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
        "sourceFileName": "redis.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _redis = _interopRequireDefault(require(\"redis\"));\n\nvar _util = require(\"util\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar RedisClient = /*#__PURE__*/function () {\n  function RedisClient() {\n    _classCallCheck(this, RedisClient);\n\n    this.client = _redis[\"default\"].createClient();\n    this.getAsync = (0, _util.promisify)(this.client.get).bind(this.client);\n    this.client.on('error', function (error) {\n      console.log(\"Redis client not connected to the server: \".concat(error.message));\n    });\n    this.client.on('connect', function () {//   console.log('Redis client connected to the server');\n    });\n  }\n\n  _createClass(RedisClient, [{\n    key: \"isAlive\",\n    value: function isAlive() {\n      return this.client.connected;\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(key) {\n        var value;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getAsync(key);\n\n              case 2:\n                value = _context.sent;\n                return _context.abrupt(\"return\", value);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"set\",\n    value: function () {\n      var _set = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(key, value, duration) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.client.setex(key, duration, value);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function set(_x2, _x3, _x4) {\n        return _set.apply(this, arguments);\n      }\n\n      return set;\n    }()\n  }, {\n    key: \"del\",\n    value: function () {\n      var _del = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(key) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.client.del(key);\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function del(_x5) {\n        return _del.apply(this, arguments);\n      }\n\n      return del;\n    }()\n  }]);\n\n  return RedisClient;\n}();\n\nvar redisClient = new RedisClient();\nvar _default = redisClient;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZGlzLmpzIl0sIm5hbWVzIjpbIlJlZGlzQ2xpZW50IiwiY2xpZW50IiwicmVkaXMiLCJjcmVhdGVDbGllbnQiLCJnZXRBc3luYyIsImdldCIsImJpbmQiLCJvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsIm1lc3NhZ2UiLCJjb25uZWN0ZWQiLCJrZXkiLCJ2YWx1ZSIsImR1cmF0aW9uIiwic2V0ZXgiLCJkZWwiLCJyZWRpc0NsaWVudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7Ozs7Ozs7OztJQUVNQSxXO0FBQ0oseUJBQWM7QUFBQTs7QUFDWixTQUFLQyxNQUFMLEdBQWNDLGtCQUFNQyxZQUFOLEVBQWQ7QUFDQSxTQUFLQyxRQUFMLEdBQWdCLHFCQUFVLEtBQUtILE1BQUwsQ0FBWUksR0FBdEIsRUFBMkJDLElBQTNCLENBQWdDLEtBQUtMLE1BQXJDLENBQWhCO0FBRUEsU0FBS0EsTUFBTCxDQUFZTSxFQUFaLENBQWUsT0FBZixFQUF3QixVQUFDQyxLQUFELEVBQVc7QUFDakNDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixxREFBeURGLEtBQUssQ0FBQ0csT0FBL0Q7QUFDRCxLQUZEO0FBSUEsU0FBS1YsTUFBTCxDQUFZTSxFQUFaLENBQWUsU0FBZixFQUEwQixZQUFNLENBQzlCO0FBQ0QsS0FGRDtBQUdEOzs7OzhCQUVTO0FBQ1IsYUFBTyxLQUFLTixNQUFMLENBQVlXLFNBQW5CO0FBQ0Q7Ozs7MEZBRVNDLEc7Ozs7Ozs7dUJBQ1ksS0FBS1QsUUFBTCxDQUFjUyxHQUFkLEM7OztBQUFkQyxnQkFBQUEsSztpREFDQ0EsSzs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsyRkFHQ0QsRyxFQUFLQyxLLEVBQU9DLFE7Ozs7O0FBQ3BCLHFCQUFLZCxNQUFMLENBQVllLEtBQVosQ0FBa0JILEdBQWxCLEVBQXVCRSxRQUF2QixFQUFpQ0QsS0FBakM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MkZBR1FELEc7Ozs7O0FBQ1IscUJBQUtaLE1BQUwsQ0FBWWdCLEdBQVosQ0FBZ0JKLEdBQWhCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFJSixJQUFNSyxXQUFXLEdBQUcsSUFBSWxCLFdBQUosRUFBcEI7ZUFFZWtCLFciLCJzb3VyY2VSb290IjoiL2hvbWUvdmFncmFudC9ob2xiZXJ0b25zY2hvb2wtZmlsZXNfbWFuYWdlci91dGlscy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcmVkaXMgZnJvbSAncmVkaXMnO1xuaW1wb3J0IHsgcHJvbWlzaWZ5IH0gZnJvbSAndXRpbCc7XG5cbmNsYXNzIFJlZGlzQ2xpZW50IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jbGllbnQgPSByZWRpcy5jcmVhdGVDbGllbnQoKTtcbiAgICB0aGlzLmdldEFzeW5jID0gcHJvbWlzaWZ5KHRoaXMuY2xpZW50LmdldCkuYmluZCh0aGlzLmNsaWVudCk7XG5cbiAgICB0aGlzLmNsaWVudC5vbignZXJyb3InLCAoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKGBSZWRpcyBjbGllbnQgbm90IGNvbm5lY3RlZCB0byB0aGUgc2VydmVyOiAke2Vycm9yLm1lc3NhZ2V9YCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLmNsaWVudC5vbignY29ubmVjdCcsICgpID0+IHtcbiAgICAgIC8vICAgY29uc29sZS5sb2coJ1JlZGlzIGNsaWVudCBjb25uZWN0ZWQgdG8gdGhlIHNlcnZlcicpO1xuICAgIH0pO1xuICB9XG5cbiAgaXNBbGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuY29ubmVjdGVkO1xuICB9XG5cbiAgYXN5bmMgZ2V0KGtleSkge1xuICAgIGNvbnN0IHZhbHVlID0gYXdhaXQgdGhpcy5nZXRBc3luYyhrZXkpO1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuXG4gIGFzeW5jIHNldChrZXksIHZhbHVlLCBkdXJhdGlvbikge1xuICAgIHRoaXMuY2xpZW50LnNldGV4KGtleSwgZHVyYXRpb24sIHZhbHVlKTtcbiAgfVxuXG4gIGFzeW5jIGRlbChrZXkpIHtcbiAgICB0aGlzLmNsaWVudC5kZWwoa2V5KTtcbiAgfVxufVxuXG5jb25zdCByZWRpc0NsaWVudCA9IG5ldyBSZWRpc0NsaWVudCgpO1xuXG5leHBvcnQgZGVmYXVsdCByZWRpc0NsaWVudDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "redis.js"
      ],
      "names": [
        "RedisClient",
        "client",
        "redis",
        "createClient",
        "getAsync",
        "get",
        "bind",
        "on",
        "error",
        "console",
        "log",
        "message",
        "connected",
        "key",
        "value",
        "duration",
        "setex",
        "del",
        "redisClient"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;IAEMA,W;AACJ,yBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAcC,kBAAMC,YAAN,EAAd;AACA,SAAKC,QAAL,GAAgB,qBAAU,KAAKH,MAAL,CAAYI,GAAtB,EAA2BC,IAA3B,CAAgC,KAAKL,MAArC,CAAhB;AAEA,SAAKA,MAAL,CAAYM,EAAZ,CAAe,OAAf,EAAwB,UAACC,KAAD,EAAW;AACjCC,MAAAA,OAAO,CAACC,GAAR,qDAAyDF,KAAK,CAACG,OAA/D;AACD,KAFD;AAIA,SAAKV,MAAL,CAAYM,EAAZ,CAAe,SAAf,EAA0B,YAAM,CAC9B;AACD,KAFD;AAGD;;;;8BAES;AACR,aAAO,KAAKN,MAAL,CAAYW,SAAnB;AACD;;;;0FAESC,G;;;;;;;uBACY,KAAKT,QAAL,CAAcS,GAAd,C;;;AAAdC,gBAAAA,K;iDACCA,K;;;;;;;;;;;;;;;;;;;2FAGCD,G,EAAKC,K,EAAOC,Q;;;;;AACpB,qBAAKd,MAAL,CAAYe,KAAZ,CAAkBH,GAAlB,EAAuBE,QAAvB,EAAiCD,KAAjC;;;;;;;;;;;;;;;;;;;2FAGQD,G;;;;;AACR,qBAAKZ,MAAL,CAAYgB,GAAZ,CAAgBJ,GAAhB;;;;;;;;;;;;;;;;;;;;;AAIJ,IAAMK,WAAW,GAAG,IAAIlB,WAAJ,EAApB;eAEekB,W",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
      "sourcesContent": [
        "import redis from 'redis';\nimport { promisify } from 'util';\n\nclass RedisClient {\n  constructor() {\n    this.client = redis.createClient();\n    this.getAsync = promisify(this.client.get).bind(this.client);\n\n    this.client.on('error', (error) => {\n      console.log(`Redis client not connected to the server: ${error.message}`);\n    });\n\n    this.client.on('connect', () => {\n      //   console.log('Redis client connected to the server');\n    });\n  }\n\n  isAlive() {\n    return this.client.connected;\n  }\n\n  async get(key) {\n    const value = await this.getAsync(key);\n    return value;\n  }\n\n  async set(key, value, duration) {\n    this.client.setex(key, duration, value);\n  }\n\n  async del(key) {\n    this.client.del(key);\n  }\n}\n\nconst redisClient = new RedisClient();\n\nexport default redisClient;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611973509032
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/utils/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/utils/db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/utils/db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/utils/db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/utils/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('mongodb'),\n    MongoClient = _require.MongoClient;\n/** DBclient - A MongoDB client class */\n\n\nvar DBclient = /*#__PURE__*/function () {\n  function DBclient() {\n    var _this = this;\n\n    _classCallCheck(this, DBclient);\n\n    var host = process.env.DB_HOST || 'localhost';\n    var port = process.env.DB_PORT || 27017;\n    var database = process.env.DB_DATABASE || 'files_manager';\n    var uri = \"mongodb://\".concat(host, \":\").concat(port, \"/\");\n    this.client = null; // Creating a connection to mongodb, saving dabase client to this.client\n\n    MongoClient.connect(uri, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n    }, function (err, db) {\n      if (err) _this.client = false;else {\n        _this.client = db.db(database);\n\n        _this.client.createCollection('users');\n\n        _this.client.createCollection('files');\n      }\n    });\n  }\n\n  _createClass(DBclient, [{\n    key: \"isAlive\",\n    value: function isAlive() {\n      return !!this.client; // this.client ? true : false;\n    }\n  }, {\n    key: \"nbUsers\",\n    value: function () {\n      var _nbUsers = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var numDocs;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.client.collection('users').estimatedDocumentCount({});\n\n              case 2:\n                numDocs = _context.sent;\n                return _context.abrupt(\"return\", numDocs);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function nbUsers() {\n        return _nbUsers.apply(this, arguments);\n      }\n\n      return nbUsers;\n    }()\n  }, {\n    key: \"nbFiles\",\n    value: function () {\n      var _nbFiles = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var numDocs;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.client.collection('files').estimatedDocumentCount({});\n\n              case 2:\n                numDocs = _context2.sent;\n                return _context2.abrupt(\"return\", numDocs);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function nbFiles() {\n        return _nbFiles.apply(this, arguments);\n      }\n\n      return nbFiles;\n    }()\n  }]);\n\n  return DBclient;\n}();\n\nvar dbClient = new DBclient();\nmodule.exports = dbClient;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJNb25nb0NsaWVudCIsIkRCY2xpZW50IiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJEQl9IT1NUIiwicG9ydCIsIkRCX1BPUlQiLCJkYXRhYmFzZSIsIkRCX0RBVEFCQVNFIiwidXJpIiwiY2xpZW50IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImVyciIsImRiIiwiY3JlYXRlQ29sbGVjdGlvbiIsImNvbGxlY3Rpb24iLCJlc3RpbWF0ZWREb2N1bWVudENvdW50IiwibnVtRG9jcyIsImRiQ2xpZW50IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O2VBQXdCQSxPQUFPLENBQUMsU0FBRCxDO0lBQXZCQyxXLFlBQUFBLFc7QUFFUjs7O0lBQ01DLFE7QUFDSixzQkFBYztBQUFBOztBQUFBOztBQUNaLFFBQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BQVosSUFBdUIsV0FBcEM7QUFDQSxRQUFNQyxJQUFJLEdBQUdILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxPQUFaLElBQXVCLEtBQXBDO0FBQ0EsUUFBTUMsUUFBUSxHQUFHTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUssV0FBWixJQUEyQixlQUE1QztBQUNBLFFBQU1DLEdBQUcsdUJBQWdCUixJQUFoQixjQUF3QkksSUFBeEIsTUFBVDtBQUVBLFNBQUtLLE1BQUwsR0FBYyxJQUFkLENBTlksQ0FPWjs7QUFDQVgsSUFBQUEsV0FBVyxDQUFDWSxPQUFaLENBQW9CRixHQUFwQixFQUF5QjtBQUFFRyxNQUFBQSxlQUFlLEVBQUUsSUFBbkI7QUFBeUJDLE1BQUFBLGtCQUFrQixFQUFFO0FBQTdDLEtBQXpCLEVBQThFLFVBQUNDLEdBQUQsRUFBTUMsRUFBTixFQUFhO0FBQ3pGLFVBQUlELEdBQUosRUFBUyxLQUFJLENBQUNKLE1BQUwsR0FBYyxLQUFkLENBQVQsS0FDSztBQUNILFFBQUEsS0FBSSxDQUFDQSxNQUFMLEdBQWNLLEVBQUUsQ0FBQ0EsRUFBSCxDQUFNUixRQUFOLENBQWQ7O0FBQ0EsUUFBQSxLQUFJLENBQUNHLE1BQUwsQ0FBWU0sZ0JBQVosQ0FBNkIsT0FBN0I7O0FBQ0EsUUFBQSxLQUFJLENBQUNOLE1BQUwsQ0FBWU0sZ0JBQVosQ0FBNkIsT0FBN0I7QUFDRDtBQUNGLEtBUEQ7QUFRRDs7Ozs4QkFFUztBQUNSLGFBQU8sQ0FBQyxDQUFDLEtBQUtOLE1BQWQsQ0FEUSxDQUNjO0FBQ3ZCOzs7Ozs7Ozs7Ozt1QkFHdUIsS0FBS0EsTUFBTCxDQUFZTyxVQUFaLENBQXVCLE9BQXZCLEVBQWdDQyxzQkFBaEMsQ0FBdUQsRUFBdkQsQzs7O0FBQWhCQyxnQkFBQUEsTztpREFDQ0EsTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7dUJBSWUsS0FBS1QsTUFBTCxDQUFZTyxVQUFaLENBQXVCLE9BQXZCLEVBQWdDQyxzQkFBaEMsQ0FBdUQsRUFBdkQsQzs7O0FBQWhCQyxnQkFBQUEsTztrREFDQ0EsTzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSVgsSUFBTUMsUUFBUSxHQUFHLElBQUlwQixRQUFKLEVBQWpCO0FBQ0FxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJGLFFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3ZhZ3JhbnQvaG9sYmVydG9uc2Nob29sLWZpbGVzX21hbmFnZXIvdXRpbHMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBNb25nb0NsaWVudCB9ID0gcmVxdWlyZSgnbW9uZ29kYicpO1xuXG4vKiogREJjbGllbnQgLSBBIE1vbmdvREIgY2xpZW50IGNsYXNzICovXG5jbGFzcyBEQmNsaWVudCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IGhvc3QgPSBwcm9jZXNzLmVudi5EQl9IT1NUIHx8ICdsb2NhbGhvc3QnO1xuICAgIGNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5EQl9QT1JUIHx8IDI3MDE3O1xuICAgIGNvbnN0IGRhdGFiYXNlID0gcHJvY2Vzcy5lbnYuREJfREFUQUJBU0UgfHwgJ2ZpbGVzX21hbmFnZXInO1xuICAgIGNvbnN0IHVyaSA9IGBtb25nb2RiOi8vJHtob3N0fToke3BvcnR9L2A7XG5cbiAgICB0aGlzLmNsaWVudCA9IG51bGw7XG4gICAgLy8gQ3JlYXRpbmcgYSBjb25uZWN0aW9uIHRvIG1vbmdvZGIsIHNhdmluZyBkYWJhc2UgY2xpZW50IHRvIHRoaXMuY2xpZW50XG4gICAgTW9uZ29DbGllbnQuY29ubmVjdCh1cmksIHsgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLCB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWUgfSwgKGVyciwgZGIpID0+IHtcbiAgICAgIGlmIChlcnIpIHRoaXMuY2xpZW50ID0gZmFsc2U7XG4gICAgICBlbHNlIHtcbiAgICAgICAgdGhpcy5jbGllbnQgPSBkYi5kYihkYXRhYmFzZSk7XG4gICAgICAgIHRoaXMuY2xpZW50LmNyZWF0ZUNvbGxlY3Rpb24oJ3VzZXJzJyk7XG4gICAgICAgIHRoaXMuY2xpZW50LmNyZWF0ZUNvbGxlY3Rpb24oJ2ZpbGVzJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBpc0FsaXZlKCkge1xuICAgIHJldHVybiAhIXRoaXMuY2xpZW50OyAvLyB0aGlzLmNsaWVudCA/IHRydWUgOiBmYWxzZTtcbiAgfVxuXG4gIGFzeW5jIG5iVXNlcnMoKSB7XG4gICAgY29uc3QgbnVtRG9jcyA9IGF3YWl0IHRoaXMuY2xpZW50LmNvbGxlY3Rpb24oJ3VzZXJzJykuZXN0aW1hdGVkRG9jdW1lbnRDb3VudCh7fSk7XG4gICAgcmV0dXJuIG51bURvY3M7XG4gIH1cblxuICBhc3luYyBuYkZpbGVzKCkge1xuICAgIGNvbnN0IG51bURvY3MgPSBhd2FpdCB0aGlzLmNsaWVudC5jb2xsZWN0aW9uKCdmaWxlcycpLmVzdGltYXRlZERvY3VtZW50Q291bnQoe30pO1xuICAgIHJldHVybiBudW1Eb2NzO1xuICB9XG59XG5cbmNvbnN0IGRiQ2xpZW50ID0gbmV3IERCY2xpZW50KCk7XG5tb2R1bGUuZXhwb3J0cyA9IGRiQ2xpZW50O1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "MongoClient",
        "DBclient",
        "host",
        "process",
        "env",
        "DB_HOST",
        "port",
        "DB_PORT",
        "database",
        "DB_DATABASE",
        "uri",
        "client",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "err",
        "db",
        "createCollection",
        "collection",
        "estimatedDocumentCount",
        "numDocs",
        "dbClient",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;;;;;;;eAAwBA,OAAO,CAAC,SAAD,C;IAAvBC,W,YAAAA,W;AAER;;;IACMC,Q;AACJ,sBAAc;AAAA;;AAAA;;AACZ,QAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,WAApC;AACA,QAAMC,IAAI,GAAGH,OAAO,CAACC,GAAR,CAAYG,OAAZ,IAAuB,KAApC;AACA,QAAMC,QAAQ,GAAGL,OAAO,CAACC,GAAR,CAAYK,WAAZ,IAA2B,eAA5C;AACA,QAAMC,GAAG,uBAAgBR,IAAhB,cAAwBI,IAAxB,MAAT;AAEA,SAAKK,MAAL,GAAc,IAAd,CANY,CAOZ;;AACAX,IAAAA,WAAW,CAACY,OAAZ,CAAoBF,GAApB,EAAyB;AAAEG,MAAAA,eAAe,EAAE,IAAnB;AAAyBC,MAAAA,kBAAkB,EAAE;AAA7C,KAAzB,EAA8E,UAACC,GAAD,EAAMC,EAAN,EAAa;AACzF,UAAID,GAAJ,EAAS,KAAI,CAACJ,MAAL,GAAc,KAAd,CAAT,KACK;AACH,QAAA,KAAI,CAACA,MAAL,GAAcK,EAAE,CAACA,EAAH,CAAMR,QAAN,CAAd;;AACA,QAAA,KAAI,CAACG,MAAL,CAAYM,gBAAZ,CAA6B,OAA7B;;AACA,QAAA,KAAI,CAACN,MAAL,CAAYM,gBAAZ,CAA6B,OAA7B;AACD;AACF,KAPD;AAQD;;;;8BAES;AACR,aAAO,CAAC,CAAC,KAAKN,MAAd,CADQ,CACc;AACvB;;;;;;;;;;;uBAGuB,KAAKA,MAAL,CAAYO,UAAZ,CAAuB,OAAvB,EAAgCC,sBAAhC,CAAuD,EAAvD,C;;;AAAhBC,gBAAAA,O;iDACCA,O;;;;;;;;;;;;;;;;;;;;;;;;;;uBAIe,KAAKT,MAAL,CAAYO,UAAZ,CAAuB,OAAvB,EAAgCC,sBAAhC,CAAuD,EAAvD,C;;;AAAhBC,gBAAAA,O;kDACCA,O;;;;;;;;;;;;;;;;;;;;;AAIX,IAAMC,QAAQ,GAAG,IAAIpB,QAAJ,EAAjB;AACAqB,MAAM,CAACC,OAAP,GAAiBF,QAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/utils/",
      "sourcesContent": [
        "const { MongoClient } = require('mongodb');\n\n/** DBclient - A MongoDB client class */\nclass DBclient {\n  constructor() {\n    const host = process.env.DB_HOST || 'localhost';\n    const port = process.env.DB_PORT || 27017;\n    const database = process.env.DB_DATABASE || 'files_manager';\n    const uri = `mongodb://${host}:${port}/`;\n\n    this.client = null;\n    // Creating a connection to mongodb, saving dabase client to this.client\n    MongoClient.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true }, (err, db) => {\n      if (err) this.client = false;\n      else {\n        this.client = db.db(database);\n        this.client.createCollection('users');\n        this.client.createCollection('files');\n      }\n    });\n  }\n\n  isAlive() {\n    return !!this.client; // this.client ? true : false;\n  }\n\n  async nbUsers() {\n    const numDocs = await this.client.collection('users').estimatedDocumentCount({});\n    return numDocs;\n  }\n\n  async nbFiles() {\n    const numDocs = await this.client.collection('files').estimatedDocumentCount({});\n    return numDocs;\n  }\n}\n\nconst dbClient = new DBclient();\nmodule.exports = dbClient;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611974509280
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/controllers/UsersController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/controllers/UsersController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/controllers/UsersController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/controllers/UsersController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
        "sourceFileName": "UsersController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar sha1 = require('sha1');\n\nvar _require = require('uuid'),\n    uuidv4 = _require.v4;\n\nvar dbClient = require('../utils/db');\n\nvar redisClient = require('../utils/redis');\n/** getConnect - creates an authentication token to sign-in a user*/\n\n\nfunction getConnect(_x, _x2) {\n  return _getConnect.apply(this, arguments);\n}\n/** getDisconnect - signs-out the user by deleten the connection token in\n the redis client*/\n\n\nfunction _getConnect() {\n  _getConnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var header, decoded, credentials, doc, user, token, key;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            header = req.headers.authorization.slice(6);\n            decoded = Buffer.from(header, 'base64').toString(); // decode base64\n\n            credentials = decoded.split(':');\n            doc = {\n              email: credentials[0],\n              password: sha1(credentials[1])\n            };\n            _context.next = 6;\n            return dbClient.client.collection('users').findOne(doc);\n\n          case 6:\n            user = _context.sent;\n\n            if (user) {\n              token = uuidv4();\n              key = \"auth_\".concat(token);\n              redisClient.set(key, user._id.toString(), 24 * 3600);\n              res.json({\n                token: token\n              });\n            } else res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getConnect.apply(this, arguments);\n}\n\nfunction getDisconnect(_x3, _x4) {\n  return _getDisconnect.apply(this, arguments);\n}\n\nfunction _getDisconnect() {\n  _getDisconnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var key, token;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            key = req.headers['x-token'];\n            _context2.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            token = _context2.sent;\n\n            if (token) {\n              redisClient.del(\"auth_\".concat(key));\n              res.status(204).end();\n            } else res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDisconnect.apply(this, arguments);\n}\n\nmodule.exports = {\n  getConnect: getConnect,\n  getDisconnect: getDisconnect\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlVzZXJzQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJzaGExIiwicmVxdWlyZSIsInV1aWR2NCIsInY0IiwiZGJDbGllbnQiLCJyZWRpc0NsaWVudCIsImdldENvbm5lY3QiLCJyZXEiLCJyZXMiLCJoZWFkZXIiLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInNsaWNlIiwiZGVjb2RlZCIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImNyZWRlbnRpYWxzIiwic3BsaXQiLCJkb2MiLCJlbWFpbCIsInBhc3N3b3JkIiwiY2xpZW50IiwiY29sbGVjdGlvbiIsImZpbmRPbmUiLCJ1c2VyIiwidG9rZW4iLCJrZXkiLCJzZXQiLCJfaWQiLCJqc29uIiwic3RhdHVzIiwiZXJyb3IiLCJnZXREaXNjb25uZWN0IiwiZ2V0IiwiZGVsIiwiZW5kIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxPQUFPLENBQUMsTUFBRCxDQUFwQjs7ZUFDdUJBLE9BQU8sQ0FBQyxNQUFELEM7SUFBbEJDLE0sWUFBSkMsRTs7QUFDUixJQUFNQyxRQUFRLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUNBLElBQU1JLFdBQVcsR0FBR0osT0FBTyxDQUFDLGdCQUFELENBQTNCO0FBRUE7OztTQUNlSyxVOzs7QUFlZjtBQUNBOzs7O3dFQWhCQSxpQkFBMEJDLEdBQTFCLEVBQStCQyxHQUEvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDUUMsWUFBQUEsTUFEUixHQUNpQkYsR0FBRyxDQUFDRyxPQUFKLENBQVlDLGFBQVosQ0FBMEJDLEtBQTFCLENBQWdDLENBQWhDLENBRGpCO0FBRVFDLFlBQUFBLE9BRlIsR0FFa0JDLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZTixNQUFaLEVBQW9CLFFBQXBCLEVBQThCTyxRQUE5QixFQUZsQixFQUU0RDs7QUFDcERDLFlBQUFBLFdBSFIsR0FHc0JKLE9BQU8sQ0FBQ0ssS0FBUixDQUFjLEdBQWQsQ0FIdEI7QUFLUUMsWUFBQUEsR0FMUixHQUtjO0FBQUVDLGNBQUFBLEtBQUssRUFBRUgsV0FBVyxDQUFDLENBQUQsQ0FBcEI7QUFBeUJJLGNBQUFBLFFBQVEsRUFBRXJCLElBQUksQ0FBQ2lCLFdBQVcsQ0FBQyxDQUFELENBQVo7QUFBdkMsYUFMZDtBQUFBO0FBQUEsbUJBTXFCYixRQUFRLENBQUNrQixNQUFULENBQWdCQyxVQUFoQixDQUEyQixPQUEzQixFQUFvQ0MsT0FBcEMsQ0FBNENMLEdBQTVDLENBTnJCOztBQUFBO0FBTVFNLFlBQUFBLElBTlI7O0FBT0UsZ0JBQUlBLElBQUosRUFBVTtBQUNGQyxjQUFBQSxLQURFLEdBQ014QixNQUFNLEVBRFo7QUFFRnlCLGNBQUFBLEdBRkUsa0JBRVlELEtBRlo7QUFHUnJCLGNBQUFBLFdBQVcsQ0FBQ3VCLEdBQVosQ0FBZ0JELEdBQWhCLEVBQXFCRixJQUFJLENBQUNJLEdBQUwsQ0FBU2IsUUFBVCxFQUFyQixFQUEwQyxLQUFLLElBQS9DO0FBQ0FSLGNBQUFBLEdBQUcsQ0FBQ3NCLElBQUosQ0FBUztBQUFFSixnQkFBQUEsS0FBSyxFQUFMQTtBQUFGLGVBQVQ7QUFDRCxhQUxELE1BS09sQixHQUFHLENBQUN1QixNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFBRUUsY0FBQUEsS0FBSyxFQUFFO0FBQVQsYUFBckI7O0FBWlQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQWlCZUMsYTs7Ozs7MkVBQWYsa0JBQTZCMUIsR0FBN0IsRUFBa0NDLEdBQWxDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNRbUIsWUFBQUEsR0FEUixHQUNjcEIsR0FBRyxDQUFDRyxPQUFKLENBQVksU0FBWixDQURkO0FBQUE7QUFBQSxtQkFFc0JMLFdBQVcsQ0FBQzZCLEdBQVosZ0JBQXdCUCxHQUF4QixFQUZ0Qjs7QUFBQTtBQUVRRCxZQUFBQSxLQUZSOztBQUdFLGdCQUFJQSxLQUFKLEVBQVc7QUFDVHJCLGNBQUFBLFdBQVcsQ0FBQzhCLEdBQVosZ0JBQXdCUixHQUF4QjtBQUNBbkIsY0FBQUEsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JLLEdBQWhCO0FBQ0QsYUFIRCxNQUdPNUIsR0FBRyxDQUFDdUIsTUFBSixDQUFXLEdBQVgsRUFBZ0JELElBQWhCLENBQXFCO0FBQUVFLGNBQUFBLEtBQUssRUFBRTtBQUFULGFBQXJCOztBQU5UO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEc7Ozs7QUFTQUssTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQUVoQyxFQUFBQSxVQUFVLEVBQVZBLFVBQUY7QUFBYzJCLEVBQUFBLGFBQWEsRUFBYkE7QUFBZCxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS92YWdyYW50L2hvbGJlcnRvbnNjaG9vbC1maWxlc19tYW5hZ2VyL2NvbnRyb2xsZXJzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHNoYTEgPSByZXF1aXJlKCdzaGExJyk7XG5jb25zdCB7IHY0OiB1dWlkdjQgfSA9IHJlcXVpcmUoJ3V1aWQnKTtcbmNvbnN0IGRiQ2xpZW50ID0gcmVxdWlyZSgnLi4vdXRpbHMvZGInKTtcbmNvbnN0IHJlZGlzQ2xpZW50ID0gcmVxdWlyZSgnLi4vdXRpbHMvcmVkaXMnKTtcblxuLyoqIGdldENvbm5lY3QgLSBjcmVhdGVzIGFuIGF1dGhlbnRpY2F0aW9uIHRva2VuIHRvIHNpZ24taW4gYSB1c2VyKi9cbmFzeW5jIGZ1bmN0aW9uIGdldENvbm5lY3QocmVxLCByZXMpIHtcbiAgY29uc3QgaGVhZGVyID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbi5zbGljZSg2KTtcbiAgY29uc3QgZGVjb2RlZCA9IEJ1ZmZlci5mcm9tKGhlYWRlciwgJ2Jhc2U2NCcpLnRvU3RyaW5nKCk7IC8vIGRlY29kZSBiYXNlNjRcbiAgY29uc3QgY3JlZGVudGlhbHMgPSBkZWNvZGVkLnNwbGl0KCc6Jyk7XG5cbiAgY29uc3QgZG9jID0geyBlbWFpbDogY3JlZGVudGlhbHNbMF0sIHBhc3N3b3JkOiBzaGExKGNyZWRlbnRpYWxzWzFdKSB9O1xuICBjb25zdCB1c2VyID0gYXdhaXQgZGJDbGllbnQuY2xpZW50LmNvbGxlY3Rpb24oJ3VzZXJzJykuZmluZE9uZShkb2MpO1xuICBpZiAodXNlcikge1xuICAgIGNvbnN0IHRva2VuID0gdXVpZHY0KCk7XG4gICAgY29uc3Qga2V5ID0gYGF1dGhfJHt0b2tlbn1gO1xuICAgIHJlZGlzQ2xpZW50LnNldChrZXksIHVzZXIuX2lkLnRvU3RyaW5nKCksIDI0ICogMzYwMCk7XG4gICAgcmVzLmpzb24oeyB0b2tlbiB9KTtcbiAgfSBlbHNlIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0pO1xufVxuXG4vKiogZ2V0RGlzY29ubmVjdCAtIHNpZ25zLW91dCB0aGUgdXNlciBieSBkZWxldGVuIHRoZSBjb25uZWN0aW9uIHRva2VuIGluXG4gdGhlIHJlZGlzIGNsaWVudCovXG5hc3luYyBmdW5jdGlvbiBnZXREaXNjb25uZWN0KHJlcSwgcmVzKSB7XG4gIGNvbnN0IGtleSA9IHJlcS5oZWFkZXJzWyd4LXRva2VuJ107XG4gIGNvbnN0IHRva2VuID0gYXdhaXQgcmVkaXNDbGllbnQuZ2V0KGBhdXRoXyR7a2V5fWApO1xuICBpZiAodG9rZW4pIHtcbiAgICByZWRpc0NsaWVudC5kZWwoYGF1dGhfJHtrZXl9YCk7XG4gICAgcmVzLnN0YXR1cygyMDQpLmVuZCgpO1xuICB9IGVsc2UgcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBlcnJvcjogJ1VuYXV0aG9yaXplZCcgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0geyBnZXRDb25uZWN0LCBnZXREaXNjb25uZWN0IH07XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "UsersController.js"
      ],
      "names": [
        "sha1",
        "require",
        "uuidv4",
        "v4",
        "dbClient",
        "redisClient",
        "getConnect",
        "req",
        "res",
        "header",
        "headers",
        "authorization",
        "slice",
        "decoded",
        "Buffer",
        "from",
        "toString",
        "credentials",
        "split",
        "doc",
        "email",
        "password",
        "client",
        "collection",
        "findOne",
        "user",
        "token",
        "key",
        "set",
        "_id",
        "json",
        "status",
        "error",
        "getDisconnect",
        "get",
        "del",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;eACuBA,OAAO,CAAC,MAAD,C;IAAlBC,M,YAAJC,E;;AACR,IAAMC,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,gBAAD,CAA3B;AAEA;;;SACeK,U;;;AAef;AACA;;;;wEAhBA,iBAA0BC,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,MADR,GACiBF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,CAAhC,CADjB;AAEQC,YAAAA,OAFR,GAEkBC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoB,QAApB,EAA8BO,QAA9B,EAFlB,EAE4D;;AACpDC,YAAAA,WAHR,GAGsBJ,OAAO,CAACK,KAAR,CAAc,GAAd,CAHtB;AAKQC,YAAAA,GALR,GAKc;AAAEC,cAAAA,KAAK,EAAEH,WAAW,CAAC,CAAD,CAApB;AAAyBI,cAAAA,QAAQ,EAAErB,IAAI,CAACiB,WAAW,CAAC,CAAD,CAAZ;AAAvC,aALd;AAAA;AAAA,mBAMqBb,QAAQ,CAACkB,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4CL,GAA5C,CANrB;;AAAA;AAMQM,YAAAA,IANR;;AAOE,gBAAIA,IAAJ,EAAU;AACFC,cAAAA,KADE,GACMxB,MAAM,EADZ;AAEFyB,cAAAA,GAFE,kBAEYD,KAFZ;AAGRrB,cAAAA,WAAW,CAACuB,GAAZ,CAAgBD,GAAhB,EAAqBF,IAAI,CAACI,GAAL,CAASb,QAAT,EAArB,EAA0C,KAAK,IAA/C;AACAR,cAAAA,GAAG,CAACsB,IAAJ,CAAS;AAAEJ,gBAAAA,KAAK,EAALA;AAAF,eAAT;AACD,aALD,MAKOlB,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAiBeC,a;;;;;2EAAf,kBAA6B1B,GAA7B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQmB,YAAAA,GADR,GACcpB,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd;AAAA;AAAA,mBAEsBL,WAAW,CAAC6B,GAAZ,gBAAwBP,GAAxB,EAFtB;;AAAA;AAEQD,YAAAA,KAFR;;AAGE,gBAAIA,KAAJ,EAAW;AACTrB,cAAAA,WAAW,CAAC8B,GAAZ,gBAAwBR,GAAxB;AACAnB,cAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBK,GAAhB;AACD,aAHD,MAGO5B,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAArB;;AANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASAK,MAAM,CAACC,OAAP,GAAiB;AAAEhC,EAAAA,UAAU,EAAVA,UAAF;AAAc2B,EAAAA,aAAa,EAAbA;AAAd,CAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "sourcesContent": [
        "const sha1 = require('sha1');\nconst { v4: uuidv4 } = require('uuid');\nconst dbClient = require('../utils/db');\nconst redisClient = require('../utils/redis');\n\n/** getConnect - creates an authentication token to sign-in a user*/\nasync function getConnect(req, res) {\n  const header = req.headers.authorization.slice(6);\n  const decoded = Buffer.from(header, 'base64').toString(); // decode base64\n  const credentials = decoded.split(':');\n\n  const doc = { email: credentials[0], password: sha1(credentials[1]) };\n  const user = await dbClient.client.collection('users').findOne(doc);\n  if (user) {\n    const token = uuidv4();\n    const key = `auth_${token}`;\n    redisClient.set(key, user._id.toString(), 24 * 3600);\n    res.json({ token });\n  } else res.status(401).json({ error: 'Unauthorized' });\n}\n\n/** getDisconnect - signs-out the user by deleten the connection token in\n the redis client*/\nasync function getDisconnect(req, res) {\n  const key = req.headers['x-token'];\n  const token = await redisClient.get(`auth_${key}`);\n  if (token) {\n    redisClient.del(`auth_${key}`);\n    res.status(204).end();\n  } else res.status(401).json({ error: 'Unauthorized' });\n}\n\nmodule.exports = { getConnect, getDisconnect };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611975334097
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/controllers/AuthController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/controllers/AuthController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/controllers/AuthController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/controllers/AuthController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
        "sourceFileName": "AuthController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar sha1 = require('sha1');\n\nvar _require = require('uuid'),\n    uuidv4 = _require.v4;\n\nvar dbClient = require('../utils/db');\n\nvar redisClient = require('../utils/redis');\n\nfunction getConnect(_x, _x2) {\n  return _getConnect.apply(this, arguments);\n}\n\nfunction _getConnect() {\n  _getConnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var header, decoded, credentials, doc, user, token, key;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            header = req.headers.authorization.slice(6);\n            decoded = Buffer.from(header, 'base64').toString(); // decode base64\n\n            credentials = decoded.split(':');\n            doc = {\n              email: credentials[0],\n              password: sha1(credentials[1])\n            };\n            _context.next = 6;\n            return dbClient.client.collection('users').findOne(doc);\n\n          case 6:\n            user = _context.sent;\n\n            if (user) {\n              token = uuidv4();\n              key = \"auth_\".concat(token);\n              redisClient.set(key, user._id.toString(), 24 * 3600);\n              res.json({\n                token: token\n              });\n            } else res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getConnect.apply(this, arguments);\n}\n\nfunction getDisconnect(_x3, _x4) {\n  return _getDisconnect.apply(this, arguments);\n}\n\nfunction _getDisconnect() {\n  _getDisconnect = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var key, token;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            key = req.headers['x-token'];\n            _context2.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            token = _context2.sent;\n\n            if (token) {\n              redisClient.del(\"auth_\".concat(key));\n              res.status(204).end();\n            } else res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getDisconnect.apply(this, arguments);\n}\n\nmodule.exports = {\n  getConnect: getConnect,\n  getDisconnect: getDisconnect\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkF1dGhDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbInNoYTEiLCJyZXF1aXJlIiwidXVpZHY0IiwidjQiLCJkYkNsaWVudCIsInJlZGlzQ2xpZW50IiwiZ2V0Q29ubmVjdCIsInJlcSIsInJlcyIsImhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic2xpY2UiLCJkZWNvZGVkIiwiQnVmZmVyIiwiZnJvbSIsInRvU3RyaW5nIiwiY3JlZGVudGlhbHMiLCJzcGxpdCIsImRvYyIsImVtYWlsIiwicGFzc3dvcmQiLCJjbGllbnQiLCJjb2xsZWN0aW9uIiwiZmluZE9uZSIsInVzZXIiLCJ0b2tlbiIsImtleSIsInNldCIsIl9pZCIsImpzb24iLCJzdGF0dXMiLCJlcnJvciIsImdldERpc2Nvbm5lY3QiLCJnZXQiLCJkZWwiLCJlbmQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFELENBQXBCOztlQUN1QkEsT0FBTyxDQUFDLE1BQUQsQztJQUFsQkMsTSxZQUFKQyxFOztBQUNSLElBQU1DLFFBQVEsR0FBR0gsT0FBTyxDQUFDLGFBQUQsQ0FBeEI7O0FBQ0EsSUFBTUksV0FBVyxHQUFHSixPQUFPLENBQUMsZ0JBQUQsQ0FBM0I7O1NBRWVLLFU7Ozs7O3dFQUFmLGlCQUEwQkMsR0FBMUIsRUFBK0JDLEdBQS9CO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNRQyxZQUFBQSxNQURSLEdBQ2lCRixHQUFHLENBQUNHLE9BQUosQ0FBWUMsYUFBWixDQUEwQkMsS0FBMUIsQ0FBZ0MsQ0FBaEMsQ0FEakI7QUFFUUMsWUFBQUEsT0FGUixHQUVrQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlOLE1BQVosRUFBb0IsUUFBcEIsRUFBOEJPLFFBQTlCLEVBRmxCLEVBRTREOztBQUNwREMsWUFBQUEsV0FIUixHQUdzQkosT0FBTyxDQUFDSyxLQUFSLENBQWMsR0FBZCxDQUh0QjtBQUtRQyxZQUFBQSxHQUxSLEdBS2M7QUFBRUMsY0FBQUEsS0FBSyxFQUFFSCxXQUFXLENBQUMsQ0FBRCxDQUFwQjtBQUF5QkksY0FBQUEsUUFBUSxFQUFFckIsSUFBSSxDQUFDaUIsV0FBVyxDQUFDLENBQUQsQ0FBWjtBQUF2QyxhQUxkO0FBQUE7QUFBQSxtQkFNcUJiLFFBQVEsQ0FBQ2tCLE1BQVQsQ0FBZ0JDLFVBQWhCLENBQTJCLE9BQTNCLEVBQW9DQyxPQUFwQyxDQUE0Q0wsR0FBNUMsQ0FOckI7O0FBQUE7QUFNUU0sWUFBQUEsSUFOUjs7QUFPRSxnQkFBSUEsSUFBSixFQUFVO0FBQ0ZDLGNBQUFBLEtBREUsR0FDTXhCLE1BQU0sRUFEWjtBQUVGeUIsY0FBQUEsR0FGRSxrQkFFWUQsS0FGWjtBQUdSckIsY0FBQUEsV0FBVyxDQUFDdUIsR0FBWixDQUFnQkQsR0FBaEIsRUFBcUJGLElBQUksQ0FBQ0ksR0FBTCxDQUFTYixRQUFULEVBQXJCLEVBQTBDLEtBQUssSUFBL0M7QUFDQVIsY0FBQUEsR0FBRyxDQUFDc0IsSUFBSixDQUFTO0FBQUVKLGdCQUFBQSxLQUFLLEVBQUxBO0FBQUYsZUFBVDtBQUNELGFBTEQsTUFNS2xCLEdBQUcsQ0FBQ3VCLE1BQUosQ0FBVyxHQUFYLEVBQWdCRCxJQUFoQixDQUFxQjtBQUFFRSxjQUFBQSxLQUFLLEVBQUU7QUFBVCxhQUFyQjs7QUFiUDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBZ0JlQyxhOzs7OzsyRUFBZixrQkFBNkIxQixHQUE3QixFQUFrQ0MsR0FBbEM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1FtQixZQUFBQSxHQURSLEdBQ2NwQixHQUFHLENBQUNHLE9BQUosQ0FBWSxTQUFaLENBRGQ7QUFBQTtBQUFBLG1CQUVzQkwsV0FBVyxDQUFDNkIsR0FBWixnQkFBd0JQLEdBQXhCLEVBRnRCOztBQUFBO0FBRVFELFlBQUFBLEtBRlI7O0FBR0UsZ0JBQUlBLEtBQUosRUFBVztBQUNUckIsY0FBQUEsV0FBVyxDQUFDOEIsR0FBWixnQkFBd0JSLEdBQXhCO0FBQ0FuQixjQUFBQSxHQUFHLENBQUN1QixNQUFKLENBQVcsR0FBWCxFQUFnQkssR0FBaEI7QUFDRCxhQUhELE1BR081QixHQUFHLENBQUN1QixNQUFKLENBQVcsR0FBWCxFQUFnQkQsSUFBaEIsQ0FBcUI7QUFBRUUsY0FBQUEsS0FBSyxFQUFFO0FBQVQsYUFBckI7O0FBTlQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQVNBSyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFBRWhDLEVBQUFBLFVBQVUsRUFBVkEsVUFBRjtBQUFjMkIsRUFBQUEsYUFBYSxFQUFiQTtBQUFkLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3ZhZ3JhbnQvaG9sYmVydG9uc2Nob29sLWZpbGVzX21hbmFnZXIvY29udHJvbGxlcnMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hhMSA9IHJlcXVpcmUoJ3NoYTEnKTtcbmNvbnN0IHsgdjQ6IHV1aWR2NCB9ID0gcmVxdWlyZSgndXVpZCcpO1xuY29uc3QgZGJDbGllbnQgPSByZXF1aXJlKCcuLi91dGlscy9kYicpO1xuY29uc3QgcmVkaXNDbGllbnQgPSByZXF1aXJlKCcuLi91dGlscy9yZWRpcycpO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRDb25uZWN0KHJlcSwgcmVzKSB7XG4gIGNvbnN0IGhlYWRlciA9IHJlcS5oZWFkZXJzLmF1dGhvcml6YXRpb24uc2xpY2UoNik7XG4gIGNvbnN0IGRlY29kZWQgPSBCdWZmZXIuZnJvbShoZWFkZXIsICdiYXNlNjQnKS50b1N0cmluZygpOyAvLyBkZWNvZGUgYmFzZTY0XG4gIGNvbnN0IGNyZWRlbnRpYWxzID0gZGVjb2RlZC5zcGxpdCgnOicpO1xuXG4gIGNvbnN0IGRvYyA9IHsgZW1haWw6IGNyZWRlbnRpYWxzWzBdLCBwYXNzd29yZDogc2hhMShjcmVkZW50aWFsc1sxXSkgfTtcbiAgY29uc3QgdXNlciA9IGF3YWl0IGRiQ2xpZW50LmNsaWVudC5jb2xsZWN0aW9uKCd1c2VycycpLmZpbmRPbmUoZG9jKTtcbiAgaWYgKHVzZXIpIHtcbiAgICBjb25zdCB0b2tlbiA9IHV1aWR2NCgpO1xuICAgIGNvbnN0IGtleSA9IGBhdXRoXyR7dG9rZW59YDtcbiAgICByZWRpc0NsaWVudC5zZXQoa2V5LCB1c2VyLl9pZC50b1N0cmluZygpLCAyNCAqIDM2MDApO1xuICAgIHJlcy5qc29uKHsgdG9rZW4gfSk7XG4gIH1cbiAgZWxzZSByZXMuc3RhdHVzKDQwMSkuanNvbih7IGVycm9yOiAnVW5hdXRob3JpemVkJyB9KTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZ2V0RGlzY29ubmVjdChyZXEsIHJlcykge1xuICBjb25zdCBrZXkgPSByZXEuaGVhZGVyc1sneC10b2tlbiddO1xuICBjb25zdCB0b2tlbiA9IGF3YWl0IHJlZGlzQ2xpZW50LmdldChgYXV0aF8ke2tleX1gKTtcbiAgaWYgKHRva2VuKSB7XG4gICAgcmVkaXNDbGllbnQuZGVsKGBhdXRoXyR7a2V5fWApO1xuICAgIHJlcy5zdGF0dXMoMjA0KS5lbmQoKTtcbiAgfSBlbHNlIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJyb3I6ICdVbmF1dGhvcml6ZWQnIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHsgZ2V0Q29ubmVjdCwgZ2V0RGlzY29ubmVjdCB9O1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "AuthController.js"
      ],
      "names": [
        "sha1",
        "require",
        "uuidv4",
        "v4",
        "dbClient",
        "redisClient",
        "getConnect",
        "req",
        "res",
        "header",
        "headers",
        "authorization",
        "slice",
        "decoded",
        "Buffer",
        "from",
        "toString",
        "credentials",
        "split",
        "doc",
        "email",
        "password",
        "client",
        "collection",
        "findOne",
        "user",
        "token",
        "key",
        "set",
        "_id",
        "json",
        "status",
        "error",
        "getDisconnect",
        "get",
        "del",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;eACuBA,OAAO,CAAC,MAAD,C;IAAlBC,M,YAAJC,E;;AACR,IAAMC,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMI,WAAW,GAAGJ,OAAO,CAAC,gBAAD,CAA3B;;SAEeK,U;;;;;wEAAf,iBAA0BC,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,MADR,GACiBF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,CAAhC,CADjB;AAEQC,YAAAA,OAFR,GAEkBC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoB,QAApB,EAA8BO,QAA9B,EAFlB,EAE4D;;AACpDC,YAAAA,WAHR,GAGsBJ,OAAO,CAACK,KAAR,CAAc,GAAd,CAHtB;AAKQC,YAAAA,GALR,GAKc;AAAEC,cAAAA,KAAK,EAAEH,WAAW,CAAC,CAAD,CAApB;AAAyBI,cAAAA,QAAQ,EAAErB,IAAI,CAACiB,WAAW,CAAC,CAAD,CAAZ;AAAvC,aALd;AAAA;AAAA,mBAMqBb,QAAQ,CAACkB,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4CL,GAA5C,CANrB;;AAAA;AAMQM,YAAAA,IANR;;AAOE,gBAAIA,IAAJ,EAAU;AACFC,cAAAA,KADE,GACMxB,MAAM,EADZ;AAEFyB,cAAAA,GAFE,kBAEYD,KAFZ;AAGRrB,cAAAA,WAAW,CAACuB,GAAZ,CAAgBD,GAAhB,EAAqBF,IAAI,CAACI,GAAL,CAASb,QAAT,EAArB,EAA0C,KAAK,IAA/C;AACAR,cAAAA,GAAG,CAACsB,IAAJ,CAAS;AAAEJ,gBAAAA,KAAK,EAALA;AAAF,eAAT;AACD,aALD,MAMKlB,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBeC,a;;;;;2EAAf,kBAA6B1B,GAA7B,EAAkCC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQmB,YAAAA,GADR,GACcpB,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd;AAAA;AAAA,mBAEsBL,WAAW,CAAC6B,GAAZ,gBAAwBP,GAAxB,EAFtB;;AAAA;AAEQD,YAAAA,KAFR;;AAGE,gBAAIA,KAAJ,EAAW;AACTrB,cAAAA,WAAW,CAAC8B,GAAZ,gBAAwBR,GAAxB;AACAnB,cAAAA,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBK,GAAhB;AACD,aAHD,MAGO5B,GAAG,CAACuB,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB;AAAEE,cAAAA,KAAK,EAAE;AAAT,aAArB;;AANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AASAK,MAAM,CAACC,OAAP,GAAiB;AAAEhC,EAAAA,UAAU,EAAVA,UAAF;AAAc2B,EAAAA,aAAa,EAAbA;AAAd,CAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "sourcesContent": [
        "const sha1 = require('sha1');\nconst { v4: uuidv4 } = require('uuid');\nconst dbClient = require('../utils/db');\nconst redisClient = require('../utils/redis');\n\nasync function getConnect(req, res) {\n  const header = req.headers.authorization.slice(6);\n  const decoded = Buffer.from(header, 'base64').toString(); // decode base64\n  const credentials = decoded.split(':');\n\n  const doc = { email: credentials[0], password: sha1(credentials[1]) };\n  const user = await dbClient.client.collection('users').findOne(doc);\n  if (user) {\n    const token = uuidv4();\n    const key = `auth_${token}`;\n    redisClient.set(key, user._id.toString(), 24 * 3600);\n    res.json({ token });\n  }\n  else res.status(401).json({ error: 'Unauthorized' });\n}\n\nasync function getDisconnect(req, res) {\n  const key = req.headers['x-token'];\n  const token = await redisClient.get(`auth_${key}`);\n  if (token) {\n    redisClient.del(`auth_${key}`);\n    res.status(204).end();\n  } else res.status(401).json({ error: 'Unauthorized' });\n}\n\nmodule.exports = { getConnect, getDisconnect };\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611976193950
  },
  "{\"sourceRoot\":\"/home/vagrant/holbertonschool-files_manager/controllers/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/vagrant/holbertonschool-files_manager\",\"filename\":\"/home/vagrant/holbertonschool-files_manager/controllers/FilesController.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/vagrant/holbertonschool-files_manager\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.10": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/vagrant/holbertonschool-files_manager",
      "filename": "/home/vagrant/holbertonschool-files_manager/controllers/FilesController.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/vagrant/holbertonschool-files_manager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/vagrant/holbertonschool-files_manager/controllers/FilesController.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/vagrant/holbertonschool-files_manager/controllers/FilesController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
        "sourceFileName": "FilesController.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar fs = require('fs');\n\nvar _require = require('mongodb'),\n    ObjectId = _require.ObjectId;\n\nvar _require2 = require('uuid'),\n    uuidv4 = _require2.v4;\n\nvar mime = require('mime-types');\n\nvar dbClient = require('../utils/db');\n\nvar redisClient = require('../utils/redis');\n/** postUpload - controller for route POST /files\n  Creates a file or a folder on the path `/temp/files_manager/*` containing data.\n   Header params:\n     - x-token: connection token created when user signs-in\n   JSON body:\n     - name: name of the file\n     - type: folder | file | image\n     - parentId: id of the parent folder or zero for current folder\n     - isPublic: true | false\n     - data: base64 encoded string to decode as the file's content\n*/\n\n\nfunction postUpload(_x, _x2) {\n  return _postUpload.apply(this, arguments);\n}\n/** getShow - Callback for GET /files/:id\n  Retrieves a document based on the document's id\n  Header params:\n    - x-token: connection token created when user signs-in\n  Get parameters:\n    - id: document id\n */\n\n\nfunction _postUpload() {\n  _postUpload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var key, userId, user, name, type, path, parentId, parentFile, isPublic, data, file, docFile;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            key = req.headers['x-token']; // get token from header\n\n            _context.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context.sent;\n            user = ''; // find connected user\n\n            if (!userId) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 8;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 8:\n            user = _context.sent;\n\n          case 9:\n            // MIGHT NEED TO GUARD USER\n            name = req.body.name; // name\n\n            if (!name) res.status(400).json({\n              error: 'Missing name'\n            });\n            type = req.body.type; // type\n\n            if (!type || !['folder', 'image', 'file'].includes(type)) res.status(400).json({\n              error: 'Missing type'\n            });\n            path = '/tmp/files_manager'; // create file/folder in this path\n\n            parentId = req.body.parentId || 0; // parentId\n\n            if (!(parentId !== 0)) {\n              _context.next = 26;\n              break;\n            }\n\n            _context.next = 18;\n            return dbClient.client.collection('files').findOne({\n              _id: ObjectId(parentId)\n            });\n\n          case 18:\n            parentFile = _context.sent;\n\n            if (parentFile) {\n              _context.next = 22;\n              break;\n            }\n\n            res.status(400).json({\n              error: 'Parent not found'\n            });\n            return _context.abrupt(\"return\");\n\n          case 22:\n            if (!(parentFile.type !== 'folder')) {\n              _context.next = 25;\n              break;\n            }\n\n            res.status(400).json({\n              error: 'Parent is not a folder'\n            });\n            return _context.abrupt(\"return\");\n\n          case 25:\n            path = parentFile.localPath;\n\n          case 26:\n            isPublic = req.body.isPublic || false; // isPublic\n\n            data = req.body.data; // data\n\n            if (!data && type !== 'folder') res.status(400).json({\n              error: 'Missing data'\n            });else if (data) data = Buffer.from(data, 'base64').toString(); // decode data\n\n            file = uuidv4();\n            path += \"/\".concat(file); // check if /tmp/files_manager exists, if not create it\n\n            if (!fs.existsSync('/tmp/files_manager')) fs.mkdirSync('/tmp/files_manager');\n            if (type === 'folder') fs.mkdirSync(path);else fs.writeFileSync(path, data); // save document on db\n\n            _context.next = 35;\n            return dbClient.client.collection('files').insertOne({\n              userId: user._id,\n              name: name,\n              type: type,\n              isPublic: isPublic,\n              parentId: parentId,\n              localPath: path\n            });\n\n          case 35:\n            docFile = _context.sent;\n\n            if (docFile) {\n              res.json({\n                id: docFile.ops[0]._id,\n                userId: docFile.ops[0].userId,\n                name: name,\n                type: type,\n                isPublic: isPublic,\n                parentId: parentId\n              });\n            }\n\n          case 37:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _postUpload.apply(this, arguments);\n}\n\nfunction getShow(_x3, _x4) {\n  return _getShow.apply(this, arguments);\n}\n/** getIndex - Callback for GET /files\n  Retrieves all documents of a user.\n  Optional query strings:\n    - parentId: filter by a doc's parentId\n    - page: pagination (20 docs per page)\n  Header params:\n   - x-token: connection token created when user signs-in\n */\n\n\nfunction _getShow() {\n  _getShow = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var key, userId, fileId, user, doc;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            key = req.headers['x-token']; // get token from header\n\n            _context2.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context2.sent;\n            fileId = req.params.id;\n            user = ''; // find and store user\n\n            if (!userId) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 9;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 9:\n            user = _context2.sent;\n            _context2.next = 13;\n            break;\n\n          case 12:\n            res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 13:\n            _context2.next = 15;\n            return dbClient.client.collection('files').findOne({\n              userId: ObjectId(user._id),\n              _id: ObjectId(fileId)\n            });\n\n          case 15:\n            doc = _context2.sent;\n            if (doc) res.json(doc);else res.status(404).json({\n              error: 'Not found'\n            });\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getShow.apply(this, arguments);\n}\n\nfunction getIndex(_x5, _x6) {\n  return _getIndex.apply(this, arguments);\n}\n\nfunction _getIndex() {\n  _getIndex = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var key, userId, user, docs, documents, pagination;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            key = req.headers['x-token']; // get token from header\n\n            _context3.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context3.sent;\n            user = ''; // find and store user\n\n            if (!userId) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 8;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 8:\n            user = _context3.sent;\n            _context3.next = 12;\n            break;\n\n          case 11:\n            res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 12:\n            docs = '';\n            documents = []; // to return\n            // if parentId is passed as query string, filter by this id. Otherwise filter by userId\n\n            if (!req.query.parentId) {\n              _context3.next = 20;\n              break;\n            }\n\n            _context3.next = 17;\n            return dbClient.client.collection('files').find({\n              parentId: req.query.parentId\n            });\n\n          case 17:\n            docs = _context3.sent;\n            _context3.next = 23;\n            break;\n\n          case 20:\n            _context3.next = 22;\n            return dbClient.client.collection('files').find({\n              userId: ObjectId(user._id)\n            });\n\n          case 22:\n            docs = _context3.sent;\n\n          case 23:\n            if (!req.query.page) {\n              _context3.next = 31;\n              break;\n            }\n\n            _context3.next = 26;\n            return dbClient.client.collection('files').aggregate([{\n              $facet: {\n                data: [{\n                  $skip: req.query.page * 2\n                }, {\n                  $limit: 2\n                }]\n              }\n            }], docs);\n\n          case 26:\n            pagination = _context3.sent;\n            _context3.next = 29;\n            return pagination.forEach(function (data) {\n              documents = data.data;\n            });\n\n          case 29:\n            _context3.next = 33;\n            break;\n\n          case 31:\n            _context3.next = 33;\n            return docs.forEach(function (d) {\n              return documents.push(d);\n            });\n\n          case 33:\n            // without pagination\n            if (documents) res.json(documents);else res.status(404).json({\n              error: 'Not Found'\n            });\n\n          case 34:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getIndex.apply(this, arguments);\n}\n\nfunction putPublish(_x7, _x8) {\n  return _putPublish.apply(this, arguments);\n}\n\nfunction _putPublish() {\n  _putPublish = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var key, userId, user, docId, doc;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            key = req.headers['x-token']; // get token from header\n\n            _context4.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context4.sent;\n            user = ''; // find and store user\n\n            if (!userId) {\n              _context4.next = 11;\n              break;\n            }\n\n            _context4.next = 8;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 8:\n            user = _context4.sent;\n            _context4.next = 12;\n            break;\n\n          case 11:\n            res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 12:\n            docId = req.params.id;\n            _context4.next = 15;\n            return dbClient.client.collection('files').findOne({\n              _id: ObjectId(docId),\n              userId: user._id\n            });\n\n          case 15:\n            doc = _context4.sent;\n\n            if (doc) {\n              doc.isPublic = true;\n              res.json(doc);\n            } else res.status(401).json({\n              error: 'Not found'\n            });\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _putPublish.apply(this, arguments);\n}\n\nfunction putUnpublish(_x9, _x10) {\n  return _putUnpublish.apply(this, arguments);\n}\n\nfunction _putUnpublish() {\n  _putUnpublish = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var key, userId, user, docId, doc;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            key = req.headers['x-token'];\n            _context5.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context5.sent;\n            user = '';\n\n            if (!userId) {\n              _context5.next = 11;\n              break;\n            }\n\n            _context5.next = 8;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 8:\n            user = _context5.sent;\n            _context5.next = 12;\n            break;\n\n          case 11:\n            res.status(401).json({\n              error: 'Unauthorized'\n            });\n\n          case 12:\n            docId = req.params.id;\n            _context5.next = 15;\n            return dbClient.client.collection('files').findOne({\n              _id: ObjectId(docId),\n              userId: user._id\n            });\n\n          case 15:\n            doc = _context5.sent;\n\n            if (doc) {\n              doc.isPublic = false;\n              res.json(doc);\n            } else res.status(401).json({\n              error: 'Not found'\n            });\n\n          case 17:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _putUnpublish.apply(this, arguments);\n}\n\nfunction getFile(_x11, _x12) {\n  return _getFile.apply(this, arguments);\n}\n\nfunction _getFile() {\n  _getFile = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var key, userId, user, docId, doc;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            key = req.headers['x-token'];\n            _context6.next = 3;\n            return redisClient.get(\"auth_\".concat(key));\n\n          case 3:\n            userId = _context6.sent;\n            user = '';\n\n            if (!userId) {\n              _context6.next = 9;\n              break;\n            }\n\n            _context6.next = 8;\n            return dbClient.client.collection('users').findOne({\n              _id: ObjectId(userId)\n            });\n\n          case 8:\n            user = _context6.sent;\n\n          case 9:\n            docId = req.params.id;\n            _context6.next = 12;\n            return dbClient.client.collection('files').findOne({\n              _id: ObjectId(docId)\n            });\n\n          case 12:\n            doc = _context6.sent;\n\n            if (doc) {\n              if (!doc.isPublic && user === '') res.status(404).json({\n                error: 'Not Found'\n              });else if (doc.type === 'folder') res.status(400).json({\n                error: 'A folder doesn\\'t have content'\n              });else {\n                fs.readFile(doc.localPath, 'utf-8', function (err, data) {\n                  if (err) res.status(401).json({\n                    error: 'Not found'\n                  });else {\n                    res.setHeader('Content-Type', mime.lookup(doc.name));\n                    res.end(data);\n                  }\n                });\n              }\n            } else res.status(401).json({\n              error: 'Not found'\n            });\n\n          case 14:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _getFile.apply(this, arguments);\n}\n\nmodule.exports = {\n  postUpload: postUpload,\n  getShow: getShow,\n  getIndex: getIndex,\n  putPublish: putPublish,\n  putUnpublish: putUnpublish,\n  getFile: getFile\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "FilesController.js"
      ],
      "names": [
        "fs",
        "require",
        "ObjectId",
        "uuidv4",
        "v4",
        "mime",
        "dbClient",
        "redisClient",
        "postUpload",
        "req",
        "res",
        "key",
        "headers",
        "get",
        "userId",
        "user",
        "client",
        "collection",
        "findOne",
        "_id",
        "name",
        "body",
        "status",
        "json",
        "error",
        "type",
        "includes",
        "path",
        "parentId",
        "parentFile",
        "localPath",
        "isPublic",
        "data",
        "Buffer",
        "from",
        "toString",
        "file",
        "existsSync",
        "mkdirSync",
        "writeFileSync",
        "insertOne",
        "docFile",
        "id",
        "ops",
        "getShow",
        "fileId",
        "params",
        "doc",
        "getIndex",
        "docs",
        "documents",
        "query",
        "find",
        "page",
        "aggregate",
        "$facet",
        "$skip",
        "$limit",
        "pagination",
        "forEach",
        "d",
        "push",
        "putPublish",
        "docId",
        "putUnpublish",
        "getFile",
        "readFile",
        "err",
        "setHeader",
        "lookup",
        "end",
        "module",
        "exports"
      ],
      "mappings": ";;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;eACqBA,OAAO,CAAC,SAAD,C;IAApBC,Q,YAAAA,Q;;gBACeD,OAAO,CAAC,MAAD,C;IAAlBE,M,aAAJC,E;;AACR,IAAMC,IAAI,GAAGJ,OAAO,CAAC,YAAD,CAApB;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAMM,WAAW,GAAGN,OAAO,CAAC,gBAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SACeO,U;;;AAoDf;AACA;AACA;AACA;AACA;AACA;AACA;;;;wEA1DA,iBAA0BC,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd,EACsC;;AADtC;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAIMC,YAAAA,IAJN,GAIa,EAJb,EAIiB;;AAJjB,iBAKMD,MALN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAL3B;;AAAA;AAKcC,YAAAA,IALd;;AAAA;AAME;AACQK,YAAAA,IAPV,GAOmBX,GAAG,CAACY,IAPvB,CAOUD,IAPV,EAO6B;;AAC3B,gBAAI,CAACA,IAAL,EAAWV,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;AAEHC,YAAAA,IAVV,GAUmBhB,GAAG,CAACY,IAVvB,CAUUI,IAVV,EAU6B;;AAC3B,gBAAI,CAACA,IAAD,IAAS,CAAC,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,EAA4BC,QAA5B,CAAqCD,IAArC,CAAd,EAA0Df,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;AAEtDG,YAAAA,IAbN,GAaa,oBAbb,EAamC;;AAC3BC,YAAAA,QAdR,GAcmBnB,GAAG,CAACY,IAAJ,CAASO,QAAT,IAAqB,CAdxC,EAc2C;;AAd3C,kBAeMA,QAAQ,KAAK,CAfnB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgB6BtB,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAAC0B,QAAD;AAAf,aAA5C,CAhB7B;;AAAA;AAgBUC,YAAAA,UAhBV;;AAAA,gBAiBSA,UAjBT;AAAA;AAAA;AAAA;;AAkBMnB,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;AAlBN;;AAAA;AAAA,kBAoBUK,UAAU,CAACJ,IAAX,KAAoB,QApB9B;AAAA;AAAA;AAAA;;AAqBMf,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;AArBN;;AAAA;AAuBMG,YAAAA,IAAI,GAAGE,UAAU,CAACC,SAAlB;;AAvBN;AA0BQC,YAAAA,QA1BR,GA0BmBtB,GAAG,CAACY,IAAJ,CAASU,QAAT,IAAqB,KA1BxC,EA0B+C;;AAEvCC,YAAAA,IA5BR,GA4BiBvB,GAAG,CAACY,IA5BrB,CA4BQW,IA5BR,EA4B2B;;AACzB,gBAAI,CAACA,IAAD,IAASP,IAAI,KAAK,QAAtB,EAAgCf,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB,EAAhC,KACK,IAAIQ,IAAJ,EAAUA,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYF,IAAZ,EAAkB,QAAlB,EAA4BG,QAA5B,EAAP,CA9BjB,CA8BgE;;AAExDC,YAAAA,IAhCR,GAgCejC,MAAM,EAhCrB;AAiCEwB,YAAAA,IAAI,eAAQS,IAAR,CAAJ,CAjCF,CAmCE;;AACA,gBAAI,CAACpC,EAAE,CAACqC,UAAH,CAAc,oBAAd,CAAL,EAA0CrC,EAAE,CAACsC,SAAH,CAAa,oBAAb;AAE1C,gBAAIb,IAAI,KAAK,QAAb,EAAuBzB,EAAE,CAACsC,SAAH,CAAaX,IAAb,EAAvB,KACK3B,EAAE,CAACuC,aAAH,CAAiBZ,IAAjB,EAAuBK,IAAvB,EAvCP,CAyCE;;AAzCF;AAAA,mBA0CwB1B,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCuB,SAApC,CAA8C;AAClE1B,cAAAA,MAAM,EAAEC,IAAI,CAACI,GADqD;AAChDC,cAAAA,IAAI,EAAJA,IADgD;AAC1CK,cAAAA,IAAI,EAAJA,IAD0C;AACpCM,cAAAA,QAAQ,EAARA,QADoC;AAC1BH,cAAAA,QAAQ,EAARA,QAD0B;AAChBE,cAAAA,SAAS,EAAEH;AADK,aAA9C,CA1CxB;;AAAA;AA0CQc,YAAAA,OA1CR;;AA6CE,gBAAIA,OAAJ,EAAa;AACX/B,cAAAA,GAAG,CAACa,IAAJ,CAAS;AACPmB,gBAAAA,EAAE,EAAED,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAexB,GADZ;AACiBL,gBAAAA,MAAM,EAAE2B,OAAO,CAACE,GAAR,CAAY,CAAZ,EAAe7B,MADxC;AACgDM,gBAAAA,IAAI,EAAJA,IADhD;AACsDK,gBAAAA,IAAI,EAAJA,IADtD;AAC4DM,gBAAAA,QAAQ,EAARA,QAD5D;AACsEH,gBAAAA,QAAQ,EAARA;AADtE,eAAT;AAGD;;AAjDH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA2DegB,O;;;AAef;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;qEAtBA,kBAAuBnC,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd,EACsC;;AADtC;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAGQ+B,YAAAA,MAHR,GAGiBpC,GAAG,CAACqC,MAAJ,CAAWJ,EAH5B;AAKM3B,YAAAA,IALN,GAKa,EALb,EAKiB;;AALjB,iBAMMD,MANN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAM2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAN3B;;AAAA;AAMcC,YAAAA,IANd;AAAA;AAAA;;AAAA;AAOOL,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAPP;AAAA;AAAA,mBAUoBlB,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEJ,cAAAA,MAAM,EAAEZ,QAAQ,CAACa,IAAI,CAACI,GAAN,CAAlB;AAA8BA,cAAAA,GAAG,EAAEjB,QAAQ,CAAC2C,MAAD;AAA3C,aAA5C,CAVpB;;AAAA;AAUQE,YAAAA,GAVR;AAWE,gBAAIA,GAAJ,EAASrC,GAAG,CAACa,IAAJ,CAASwB,GAAT,EAAT,KACKrC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAZP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBewB,Q;;;;;sEAAf,kBAAwBvC,GAAxB,EAA6BC,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd,EACsC;;AADtC;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAIMC,YAAAA,IAJN,GAIa,EAJb,EAIiB;;AAJjB,iBAKMD,MALN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAL3B;;AAAA;AAKcC,YAAAA,IALd;AAAA;AAAA;;AAAA;AAMOL,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AANP;AAQMyB,YAAAA,IARN,GAQa,EARb;AASMC,YAAAA,SATN,GASkB,EATlB,EASsB;AAEpB;;AAXF,iBAYMzC,GAAG,CAAC0C,KAAJ,CAAUvB,QAZhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAaiBtB,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCmC,IAApC,CAAyC;AAAExB,cAAAA,QAAQ,EAAEnB,GAAG,CAAC0C,KAAJ,CAAUvB;AAAtB,aAAzC,CAbjB;;AAAA;AAaIqB,YAAAA,IAbJ;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAcsB3C,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCmC,IAApC,CAAyC;AAAEtC,cAAAA,MAAM,EAAEZ,QAAQ,CAACa,IAAI,CAACI,GAAN;AAAlB,aAAzC,CAdtB;;AAAA;AAcS8B,YAAAA,IAdT;;AAAA;AAAA,iBAiBMxC,GAAG,CAAC0C,KAAJ,CAAUE,IAjBhB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAkB6B/C,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCqC,SAApC,CAA8C,CACrE;AACEC,cAAAA,MAAM,EAAE;AACNvB,gBAAAA,IAAI,EAAE,CAAC;AAAEwB,kBAAAA,KAAK,EAAG/C,GAAG,CAAC0C,KAAJ,CAAUE,IAAV,GAAiB;AAA3B,iBAAD,EAAkC;AAAEI,kBAAAA,MAAM,EAAE;AAAV,iBAAlC;AADA;AADV,aADqE,CAA9C,EAMtBR,IANsB,CAlB7B;;AAAA;AAkBUS,YAAAA,UAlBV;AAAA;AAAA,mBAyBUA,UAAU,CAACC,OAAX,CAAmB,UAAC3B,IAAD,EAAU;AACjCkB,cAAAA,SAAS,GAAGlB,IAAI,CAACA,IAAjB;AACD,aAFK,CAzBV;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mBA4BeiB,IAAI,CAACU,OAAL,CAAa,UAACC,CAAD;AAAA,qBAAOV,SAAS,CAACW,IAAV,CAAeD,CAAf,CAAP;AAAA,aAAb,CA5Bf;;AAAA;AA4BuD;AAErD,gBAAIV,SAAJ,EAAexC,GAAG,CAACa,IAAJ,CAAS2B,SAAT,EAAf,KACKxC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AA/BP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkCesC,U;;;;;wEAAf,kBAA0BrD,GAA1B,EAA+BC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd,EACsC;;AADtC;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAIMC,YAAAA,IAJN,GAIa,EAJb,EAIiB;;AAJjB,iBAKMD,MALN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAL3B;;AAAA;AAKcC,YAAAA,IALd;AAAA;AAAA;;AAAA;AAMOL,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AANP;AAQQuC,YAAAA,KARR,GAQgBtD,GAAG,CAACqC,MAAJ,CAAWJ,EAR3B;AAAA;AAAA,mBASoBpC,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAAC6D,KAAD,CAAf;AAAwBjD,cAAAA,MAAM,EAAEC,IAAI,CAACI;AAArC,aAA5C,CATpB;;AAAA;AASQ4B,YAAAA,GATR;;AAUE,gBAAIA,GAAJ,EAAS;AACPA,cAAAA,GAAG,CAAChB,QAAJ,GAAe,IAAf;AACArB,cAAAA,GAAG,CAACa,IAAJ,CAASwB,GAAT;AACD,aAHD,MAGOrC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBewC,Y;;;;;0EAAf,kBAA4BvD,GAA5B,EAAiCC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd;AAAA;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAIMC,YAAAA,IAJN,GAIa,EAJb;;AAAA,iBAKMD,MALN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAL3B;;AAAA;AAKcC,YAAAA,IALd;AAAA;AAAA;;AAAA;AAMOL,YAAAA,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AANP;AAQQuC,YAAAA,KARR,GAQgBtD,GAAG,CAACqC,MAAJ,CAAWJ,EAR3B;AAAA;AAAA,mBASoBpC,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAAC6D,KAAD,CAAf;AAAwBjD,cAAAA,MAAM,EAAEC,IAAI,CAACI;AAArC,aAA5C,CATpB;;AAAA;AASQ4B,YAAAA,GATR;;AAUE,gBAAIA,GAAJ,EAAS;AACPA,cAAAA,GAAG,CAAChB,QAAJ,GAAe,KAAf;AACArB,cAAAA,GAAG,CAACa,IAAJ,CAASwB,GAAT;AACD,aAHD,MAGOrC,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAbT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAgBeyC,O;;;;;qEAAf,kBAAuBxD,GAAvB,EAA4BC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,YAAAA,GADR,GACcF,GAAG,CAACG,OAAJ,CAAY,SAAZ,CADd;AAAA;AAAA,mBAEuBL,WAAW,CAACM,GAAZ,gBAAwBF,GAAxB,EAFvB;;AAAA;AAEQG,YAAAA,MAFR;AAIMC,YAAAA,IAJN,GAIa,EAJb;;AAAA,iBAKMD,MALN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAK2BR,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAACY,MAAD;AAAf,aAA5C,CAL3B;;AAAA;AAKcC,YAAAA,IALd;;AAAA;AAOQgD,YAAAA,KAPR,GAOgBtD,GAAG,CAACqC,MAAJ,CAAWJ,EAP3B;AAAA;AAAA,mBAQoBpC,QAAQ,CAACU,MAAT,CAAgBC,UAAhB,CAA2B,OAA3B,EAAoCC,OAApC,CAA4C;AAAEC,cAAAA,GAAG,EAAEjB,QAAQ,CAAC6D,KAAD;AAAf,aAA5C,CARpB;;AAAA;AAQQhB,YAAAA,GARR;;AASE,gBAAIA,GAAJ,EAAS;AACP,kBAAI,CAACA,GAAG,CAAChB,QAAL,IAAiBhB,IAAI,KAAK,EAA9B,EAAkCL,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAArB,EAAlC,KACK,IAAIuB,GAAG,CAACtB,IAAJ,KAAa,QAAjB,EAA2Bf,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAArB,EAA3B,KACA;AACHxB,gBAAAA,EAAE,CAACkE,QAAH,CAAYnB,GAAG,CAACjB,SAAhB,EAA2B,OAA3B,EAAoC,UAACqC,GAAD,EAAMnC,IAAN,EAAe;AACjD,sBAAImC,GAAJ,EAASzD,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,oBAAAA,KAAK,EAAE;AAAT,mBAArB,EAAT,KACK;AACHd,oBAAAA,GAAG,CAAC0D,SAAJ,CAAc,cAAd,EAA8B/D,IAAI,CAACgE,MAAL,CAAYtB,GAAG,CAAC3B,IAAhB,CAA9B;AACAV,oBAAAA,GAAG,CAAC4D,GAAJ,CAAQtC,IAAR;AACD;AACF,iBAND;AAOD;AACF,aAZD,MAaKtB,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,cAAAA,KAAK,EAAE;AAAT,aAArB;;AAtBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAyBA+C,MAAM,CAACC,OAAP,GAAiB;AACfhE,EAAAA,UAAU,EAAVA,UADe;AACHoC,EAAAA,OAAO,EAAPA,OADG;AACMI,EAAAA,QAAQ,EAARA,QADN;AACgBc,EAAAA,UAAU,EAAVA,UADhB;AAC4BE,EAAAA,YAAY,EAAZA,YAD5B;AAC0CC,EAAAA,OAAO,EAAPA;AAD1C,CAAjB",
      "sourceRoot": "/home/vagrant/holbertonschool-files_manager/controllers/",
      "sourcesContent": [
        "const fs = require('fs');\nconst { ObjectId } = require('mongodb');\nconst { v4: uuidv4 } = require('uuid');\nconst mime = require('mime-types');\nconst dbClient = require('../utils/db');\nconst redisClient = require('../utils/redis');\n\n/** postUpload - controller for route POST /files\n  Creates a file or a folder on the path `/temp/files_manager/*` containing data.\n   Header params:\n     - x-token: connection token created when user signs-in\n   JSON body:\n     - name: name of the file\n     - type: folder | file | image\n     - parentId: id of the parent folder or zero for current folder\n     - isPublic: true | false\n     - data: base64 encoded string to decode as the file's content\n*/\nasync function postUpload(req, res) {\n  const key = req.headers['x-token']; // get token from header\n  const userId = await redisClient.get(`auth_${key}`);\n\n  let user = ''; // find connected user\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n  // MIGHT NEED TO GUARD USER\n  const { name } = req.body; // name\n  if (!name) res.status(400).json({ error: 'Missing name' });\n\n  const { type } = req.body; // type\n  if (!type || !['folder', 'image', 'file'].includes(type)) res.status(400).json({ error: 'Missing type' });\n\n  let path = '/tmp/files_manager'; // create file/folder in this path\n  const parentId = req.body.parentId || 0; // parentId\n  if (parentId !== 0) {\n    const parentFile = await dbClient.client.collection('files').findOne({ _id: ObjectId(parentId) });\n    if (!parentFile) {\n      res.status(400).json({ error: 'Parent not found' });\n      return;\n    } if (parentFile.type !== 'folder') {\n      res.status(400).json({ error: 'Parent is not a folder' });\n      return;\n    } path = parentFile.localPath;\n  }\n\n  const isPublic = req.body.isPublic || false; // isPublic\n\n  let { data } = req.body; // data\n  if (!data && type !== 'folder') res.status(400).json({ error: 'Missing data' });\n  else if (data) data = Buffer.from(data, 'base64').toString(); // decode data\n\n  const file = uuidv4();\n  path += `/${file}`;\n\n  // check if /tmp/files_manager exists, if not create it\n  if (!fs.existsSync('/tmp/files_manager')) fs.mkdirSync('/tmp/files_manager');\n\n  if (type === 'folder') fs.mkdirSync(path);\n  else fs.writeFileSync(path, data);\n\n  // save document on db\n  const docFile = await dbClient.client.collection('files').insertOne({\n    userId: user._id, name, type, isPublic, parentId, localPath: path,\n  });\n  if (docFile) {\n    res.json({\n      id: docFile.ops[0]._id, userId: docFile.ops[0].userId, name, type, isPublic, parentId,\n    });\n  }\n}\n\n/** getShow - Callback for GET /files/:id\n  Retrieves a document based on the document's id\n  Header params:\n    - x-token: connection token created when user signs-in\n  Get parameters:\n    - id: document id\n */\nasync function getShow(req, res) {\n  const key = req.headers['x-token']; // get token from header\n  const userId = await redisClient.get(`auth_${key}`);\n  const fileId = req.params.id;\n\n  let user = ''; // find and store user\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n  else res.status(401).json({ error: 'Unauthorized' });\n\n  // find the document with userID and document id (_id)\n  const doc = await dbClient.client.collection('files').findOne({ userId: ObjectId(user._id), _id: ObjectId(fileId) });\n  if (doc) res.json(doc);\n  else res.status(404).json({ error: 'Not found' });\n}\n\n/** getIndex - Callback for GET /files\n  Retrieves all documents of a user.\n  Optional query strings:\n    - parentId: filter by a doc's parentId\n    - page: pagination (20 docs per page)\n  Header params:\n   - x-token: connection token created when user signs-in\n */\nasync function getIndex(req, res) {\n  const key = req.headers['x-token']; // get token from header\n  const userId = await redisClient.get(`auth_${key}`);\n\n  let user = ''; // find and store user\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n  else res.status(401).json({ error: 'Unauthorized' });\n\n  let docs = '';\n  let documents = []; // to return\n\n  // if parentId is passed as query string, filter by this id. Otherwise filter by userId\n  if (req.query.parentId) {\n    docs = await dbClient.client.collection('files').find({ parentId: req.query.parentId });\n  } else docs = await dbClient.client.collection('files').find({ userId: ObjectId(user._id) });\n\n  // if page is passed as query string, only get the 20 items of that page\n  if (req.query.page) {\n    const pagination = await dbClient.client.collection('files').aggregate([\n      {\n        $facet: {\n          data: [{ $skip: (req.query.page * 2) }, { $limit: 2 }],\n        },\n      },\n    ], docs);\n    await pagination.forEach((data) => {\n      documents = data.data;\n    });\n  } else await docs.forEach((d) => documents.push(d)); // without pagination\n\n  if (documents) res.json(documents);\n  else res.status(404).json({ error: 'Not Found' });\n}\n\nasync function putPublish(req, res) {\n  const key = req.headers['x-token']; // get token from header\n  const userId = await redisClient.get(`auth_${key}`);\n\n  let user = ''; // find and store user\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n  else res.status(401).json({ error: 'Unauthorized' });\n\n  const docId = req.params.id;\n  const doc = await dbClient.client.collection('files').findOne({ _id: ObjectId(docId), userId: user._id });\n  if (doc) {\n    doc.isPublic = true;\n    res.json(doc);\n  } else res.status(401).json({ error: 'Not found' });\n}\n\nasync function putUnpublish(req, res) {\n  const key = req.headers['x-token']; \n  const userId = await redisClient.get(`auth_${key}`);\n\n  let user = '';\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n  else res.status(401).json({ error: 'Unauthorized' });\n\n  const docId = req.params.id;\n  const doc = await dbClient.client.collection('files').findOne({ _id: ObjectId(docId), userId: user._id });\n  if (doc) {\n    doc.isPublic = false;\n    res.json(doc);\n  } else res.status(401).json({ error: 'Not found' });\n}\n\nasync function getFile(req, res) {\n  const key = req.headers['x-token'];\n  const userId = await redisClient.get(`auth_${key}`);\n\n  let user = '';\n  if (userId) user = await dbClient.client.collection('users').findOne({ _id: ObjectId(userId) });\n\n  const docId = req.params.id;\n  const doc = await dbClient.client.collection('files').findOne({ _id: ObjectId(docId) });\n  if (doc) {\n    if (!doc.isPublic && user === '') res.status(404).json({ error: 'Not Found' });\n    else if (doc.type === 'folder') res.status(400).json({ error: 'A folder doesn\\'t have content' });\n    else {\n      fs.readFile(doc.localPath, 'utf-8', (err, data) => {\n        if (err) res.status(401).json({ error: 'Not found' });\n        else {\n          res.setHeader('Content-Type', mime.lookup(doc.name));\n          res.end(data);\n        }\n      });\n    }\n  }\n  else res.status(401).json({ error: 'Not found' });\n}\n\nmodule.exports = {\n  postUpload, getShow, getIndex, putPublish, putUnpublish, getFile,\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1611975745710
  }
}